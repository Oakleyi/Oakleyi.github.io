<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aabigale&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-06T06:04:37.536Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Aabigale</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在hexo搭建的博客中引入图片</title>
    <link href="http://yoursite.com/2020/04/06/%E5%9C%A8hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%BC%95%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2020/04/06/%E5%9C%A8hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%BC%95%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2020-04-06T06:04:08.995Z</published>
    <updated>2020-04-06T06:04:37.536Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在hexo搭建的博客中引入图片"><a href="#在hexo搭建的博客中引入图片" class="headerlink" title="在hexo搭建的博客中引入图片"></a>在hexo搭建的博客中引入图片</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在hexo搭建的博客中引入图片&quot;&gt;&lt;a href=&quot;#在hexo搭建的博客中引入图片&quot; class=&quot;headerlink&quot; title=&quot;在hexo搭建的博客中引入图片&quot;&gt;&lt;/a&gt;在hexo搭建的博客中引入图片&lt;/h1&gt;&lt;script&gt;
        docu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="http://yoursite.com/2020/04/06/Linux/"/>
    <id>http://yoursite.com/2020/04/06/Linux/</id>
    <published>2020-04-06T03:15:10.256Z</published>
    <updated>2020-04-06T06:00:10.288Z</updated>
    
    <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="http://yoursite.com/2020/04/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2020/04/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2020-04-05T13:51:43.137Z</published>
    <updated>2020-04-06T06:03:33.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><a id="more"></a><h2 id="数据结构绪论"><a href="#数据结构绪论" class="headerlink" title="数据结构绪论"></a>数据结构绪论</h2><h3 id="基本概念与术语"><a href="#基本概念与术语" class="headerlink" title="基本概念与术语"></a>基本概念与术语</h3><h3 id="逻辑结构与物理结构"><a href="#逻辑结构与物理结构" class="headerlink" title="逻辑结构与物理结构"></a>逻辑结构与物理结构</h3><h3 id="抽象数据结构"><a href="#抽象数据结构" class="headerlink" title="抽象数据结构"></a>抽象数据结构</h3><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h3 id="时间复杂度与空间复杂度"><a href="#时间复杂度与空间复杂度" class="headerlink" title="时间复杂度与空间复杂度"></a>时间复杂度与空间复杂度</h3><h2 id="线性表（list）"><a href="#线性表（list）" class="headerlink" title="线性表（list）"></a>线性表（list）</h2><h3 id="线性表的定义"><a href="#线性表的定义" class="headerlink" title="线性表的定义"></a>线性表的定义</h3><p><strong>线性表：零个或多个数据元素的有限序列</strong></p><p>线性表元素的个数 n (n&gt;=0)，定义为线性表的长度，当 n=0 时，称为空表。<strong>非空表中的每个数据元素都有一个确定的位置</strong></p><p><strong>在较复杂的线性表中，一个数据元素可以由若干个数据项组成</strong></p><table><thead><tr><th>学号</th><th>姓名</th><th>性别</th><th>出生年月</th><th>家庭住址</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>男</td><td>1995.3</td><td>东街细想 1 号 203 室</td></tr><tr><td>2</td><td>李四</td><td>女</td><td>1994.8</td><td>北路 4 弄 5 号 6 室</td></tr><tr><td>3</td><td>王五</td><td>女</td><td>1994.12</td><td>南大道 789 号</td></tr><tr><td>······</td><td>······</td><td>·······</td><td>·······</td><td>·······</td></tr></tbody></table><h3 id="线性表的抽象数据类型"><a href="#线性表的抽象数据类型" class="headerlink" title="线性表的抽象数据类型"></a>线性表的抽象数据类型</h3><h3 id="线性表的顺序存储结构"><a href="#线性表的顺序存储结构" class="headerlink" title="线性表的顺序存储结构"></a>线性表的顺序存储结构</h3><ul><li><p>顺序存储定义</p><p>线性表的顺序存储结构，指的是用一段地址连续的存储单元依次存储线性表的数据元素</p><p>示意图如下：</p><table><thead><tr><th align="center">a1</th><th>a2</th><th>······</th><th>ai-1</th><th>ai</th><th>······</th><th>an</th></tr></thead><tbody><tr><td align="center"></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>顺序存储方式</p><p>线性表的顺序存储的结构代码</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#define MAXSIZE 20 //存储空间的初始分配量</span><br><span class="line">typedef int ElemType;</span><br><span class="line">typedef struct</span><br><span class="line">{</span><br><span class="line">   ElemType daata [MAXSIZE];</span><br><span class="line">   int length;</span><br><span class="line">}SqList;</span><br></pre></td></tr></tbody></table></figure><p>描述顺序的结构需要三个属性：</p><ul><li>存储空间的起始位置</li><li>线性表的最大存储容量</li><li>线性表的当前长度</li></ul></li><li><p>数据长度与线性表长度的区别</p></li><li><p>地址计算方法</p><p><strong>存储器中每个存储单元都有自己的编号，这个标号称为地址</strong></p></li></ul><h3 id="顺序存储结构的插入与删除"><a href="#顺序存储结构的插入与删除" class="headerlink" title="顺序存储结构的插入与删除"></a>顺序存储结构的插入与删除</h3><ul><li>获得元素操作</li><li>插入操作</li><li>删除操作</li><li>线性表顺序存储结构的优缺点</li></ul><h3 id="线性表的链式存储结构"><a href="#线性表的链式存储结构" class="headerlink" title="线性表的链式存储结构"></a>线性表的链式存储结构</h3><h3 id="单链表的读取"><a href="#单链表的读取" class="headerlink" title="单链表的读取"></a>单链表的读取</h3><h3 id="单链表的插入与删除"><a href="#单链表的插入与删除" class="headerlink" title="单链表的插入与删除"></a>单链表的插入与删除</h3><h3 id="单链表的整表创建与删除"><a href="#单链表的整表创建与删除" class="headerlink" title="单链表的整表创建与删除"></a>单链表的整表创建与删除</h3><h3 id="单链表结构与顺序存储结构优缺点"><a href="#单链表结构与顺序存储结构优缺点" class="headerlink" title="单链表结构与顺序存储结构优缺点"></a>单链表结构与顺序存储结构优缺点</h3><h3 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h3><h3 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h3><h3 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h3><h3 id="总结回顾"><a href="#总结回顾" class="headerlink" title="总结回顾"></a>总结回顾</h3><h2 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h2><h2 id="串"><a href="#串" class="headerlink" title="串"></a>串</h2><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot; title=&quot;数据结构&quot;&gt;&lt;/a&gt;数据结构&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="http://yoursite.com/2020/04/05/%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2020/04/05/%E7%AE%97%E6%B3%95/</id>
    <published>2020-04-05T08:58:21.848Z</published>
    <updated>2020-04-05T10:05:18.377Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><a id="more"></a><h2 id="大整数运算"><a href="#大整数运算" class="headerlink" title="大整数运算"></a>大整数运算</h2><p>该部分重难点</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 大整数的运算的算法思想与处理技巧</span><br><span class="line">* 大整数进行加、减、乘、除运算的算法框架</span><br></pre></td></tr></tbody></table></figure><ul><li><p>计算n！</p><ul><li>当n规模较小 （n&lt;13）<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">main()</span><br><span class="line">{</span><br><span class="line">    int n,t,k;</span><br><span class="line">    scanf("%d",&amp;n);</span><br><span class="line">    t=1; //t为累乘器                             for(k=1;k&lt;=n;k++)       </span><br><span class="line">        t*=k;          </span><br><span class="line">    printf(" %d!=%ld\n",n,t);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li>当n规模较大<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;math.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">{</span><br><span class="line">  int j,k,m,n,a[100000];</span><br><span class="line">  long g,t;</span><br><span class="line">  double s;</span><br><span class="line">  printf("Please input an integer: ");</span><br><span class="line">  scanf("%d",&amp;n);</span><br><span class="line">  s=0;</span><br><span class="line">  for (k=2;k&lt;=n;k++)</span><br><span class="line">    s+=log10(k);</span><br><span class="line">  m=(int)s+1;//计算n!后的位数</span><br><span class="line">  for (k=1;k&lt;=m;k++)</span><br><span class="line">     a[k]=0;</span><br><span class="line">  a[1]=1; g=0;//进位符</span><br><span class="line"> </span><br><span class="line">  for (k=2;k&lt;=n;k++)</span><br><span class="line">    for (j=1;j&lt;=m;j++)</span><br><span class="line">    {</span><br><span class="line">      t=a[j]*k+g;</span><br><span class="line">      a[j]=t%10;</span><br><span class="line">      g=t/10;</span><br><span class="line">  }</span><br><span class="line"> printf("%d!=",n);</span><br><span class="line">  for (k=m;k&gt;=1;k--)</span><br><span class="line">    printf("%1d",a[k]);</span><br><span class="line">  printf("\n");</span><br><span class="line">  printf("m=%d\n",m);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><ul><li><p>大整数加法</p><p>用数组储存，假定每个数组元素存储4位</p><p><strong>核心代码：</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">void add(int *a, int *b, int *c)</span><br><span class="line">{</span><br><span class="line"> int i;</span><br><span class="line"> for(i = N - 1; i &gt;= 0; i--)</span><br><span class="line">    {</span><br><span class="line">      c[i] = a[i] + b[i] + carry;</span><br><span class="line">      carry=c[i]/10000;</span><br><span class="line">      c[i]=c[i]%10000;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><ul><li><p>大整数减法</p><p><strong>核心代码：</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void sub(int *a, int *b, int *c) </span><br><span class="line">{</span><br><span class="line">  int i;</span><br><span class="line">  for(i =N- 1; i &gt;= 0; i--) </span><br><span class="line"> {</span><br><span class="line">   c[i] = a[i] - b[i] - borrow;</span><br><span class="line">   if(c[i] &gt;= 0)</span><br><span class="line">       borrow = 0;</span><br><span class="line">   else // 借位</span><br><span class="line">   {</span><br><span class="line">       c[i] = c[i] + 10000;</span><br><span class="line">       borrow = 1;}</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>大整数乘法</p><ul><li><p>大整数与整数相乘</p><p><strong>核心代码：</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">void mul(int *a, int b, int *c)     </span><br><span class="line">{ </span><br><span class="line">  int i, tmp, carry = 0;</span><br><span class="line">  for(i = N - 1; i &gt;= 0; i--)       </span><br><span class="line">  {</span><br><span class="line">       tmp = a[i] * b + carry;     </span><br><span class="line">       c[i] = tmp % 10000;                          carry = tmp / 10000;         </span><br><span class="line">  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><ul><li><p>大整数与大整数相乘</p><p><strong>核心代码：</strong></p></li></ul><p>​                                                    </p><p>​                                                                         </p><h2 id="算法的概念"><a href="#算法的概念" class="headerlink" title="算法的概念"></a>算法的概念</h2><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><h2 id="递推"><a href="#递推" class="headerlink" title="递推"></a>递推</h2><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h2 id="回溯法"><a href="#回溯法" class="headerlink" title="回溯法"></a>回溯法</h2><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><h2 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;算法&quot;&gt;&lt;a href=&quot;#算法&quot; class=&quot;headerlink&quot; title=&quot;算法&quot;&gt;&lt;/a&gt;算法&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库系统概述 一</title>
    <link href="http://yoursite.com/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%20%E4%B8%80/"/>
    <id>http://yoursite.com/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%20%E4%B8%80/</id>
    <published>2020-04-03T09:02:21.868Z</published>
    <updated>2020-04-06T06:08:32.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库系统"><a href="#数据库系统" class="headerlink" title="数据库系统"></a>数据库系统</h1><a id="more"></a><h2 id="基本知识与关系模型"><a href="#基本知识与关系模型" class="headerlink" title="基本知识与关系模型"></a>基本知识与关系模型</h2><h3 id="初步认识数据库系统"><a href="#初步认识数据库系统" class="headerlink" title="初步认识数据库系统"></a>初步认识数据库系统</h3><p>该部分的重难点</p><pre><code>* 一组概念的区分：数据库、数据库系统和数据库管理系统* 熟悉“表”的相关要素及术语* 熟悉数据库系统的构成（工作环境）* 了解数据库管理系统的功能：用户和系统角度</code></pre><ul><li><p>为什么要学习数据库系统</p></li><li><p>什么是数据库</p><ul><li><strong>数据库是电子化信息扥集合</strong></li><li>数据库起源于规范化“表”的处理</li><li>基于“表”的数据库的影响</li><li>对“表”的抽象：<strong>理解-区分-命名-表达</strong></li><li>数据库相互之间有关联关系的table的集合</li></ul></li><li><p>什么是数据库系统</p><ul><li>数据库系统的构成-概念层次<ul><li>数据库</li><li>数据库管理系统</li><li>数据库应用</li><li>数据库管理员</li><li>计算机基本系统</li></ul></li><li>数据库系统的构成-实例层次</li></ul></li><li><p>什么是数据库管理系统&lt;如何利用&gt;</p><ul><li><p>用户角度</p><pre><code>* 数据库定义：用户通过**数据定义语言&lt;DDL&gt;**定义数据库中table的名称，标题* 数据库操纵：用户通过**数据操纵语言&lt;DML&gt;**对数据库中的表进行增删改查* 数据库控制：用户通过**数据控制语言&lt;DCL&gt;**控制数据库中数据的使用——哪些用户可以用，哪些不能用* 数据库维护：数据库管理系统&lt;DBMS&gt;提供一系列程序给用户，从而对数据库进行维护</code></pre></li><li><p>数据库语言</p><ul><li><p>SQL语言</p><pre><code>* 数据定义语言* 数据操纵语言* 数据控制语言</code></pre><ul><li>数据库语言与高级语言</li></ul></li></ul></li><li><p>系统角度</p></li></ul></li></ul><h3 id="数据库系统的结构抽象与演变"><a href="#数据库系统的结构抽象与演变" class="headerlink" title="数据库系统的结构抽象与演变"></a>数据库系统的结构抽象与演变</h3><p>该部分的重难点</p><pre><code>* 一组概念的区分：三级模式两层映像，物理独立性和逻辑独立性* 一组概念的区分：数据→模式→数据模型* 几种数据模型的差异：网状/层次模型→关系模型→oo数据模型</code></pre><ul><li>数据库系统的标准结构</li><li>数据模型</li><li>数据库系统的演变与发展</li></ul><h3 id="关系模型之基本概念"><a href="#关系模型之基本概念" class="headerlink" title="关系模型之基本概念"></a>关系模型之基本概念</h3><p>该部分重难点</p><pre><code>* 一组概念的区分：围绕关系的相关概念，如域。笛卡尔积，关系，关系模式，关键字/键/码，外码/外键，主码/主键,主属性与非属性。* 三个完整性，参照完整性和用户自定义的完整性</code></pre><h4 id="关系模型概述"><a href="#关系模型概述" class="headerlink" title="关系模型概述"></a>关系模型概述</h4><ul><li><p>关系模型的提出</p><ul><li>最早由E.F.Codd在1970年提出</li><li>由表及表的处理方式中抽象出来的，进行数学化严格定义基础上，引入集合理论与逻辑学理论提出的</li><li>数据库三大经典数据模型之一</li><li>SQL语言是建立在关系模型基础上的</li></ul></li><li><p>关系模型研究什么</p><ul><li>形象的说，一个关系就是一个 table</li><li>关系模型就是处理 table 的，由三部分组成<ul><li>描述DB各种数据的基本结构形式</li><li>描述table与table之间可能发生的各种操作</li><li>描述这些操作所应遵循的约束条件(完整性约束)</li></ul></li><li>就是要学习：table如何描述，有哪些操作，结果是什么，有哪些约束</li></ul></li><li><p>关系模型的三个要素</p><ul><li>基本结构</li><li>基本操作</li><li>完整性约束：实体完整性，参照完整性和用户自定义的完整性</li></ul></li><li><p>关系模型与关系数据库语言的关系</p><ul><li><p>关系运算：关系代数和关系演算；关系演算：元组演算和域演算</p></li><li><p>关系代数示例：基于集合的运算</p></li><li><p>基于关系代数设计的数据库语言(ISBL)：用计算机可识别的符号表征关系代数的运算符号</p></li><li><p>元组演算：基于逻辑的运算</p></li><li><p>基于元组演算设计的数据库语言：······</p></li><li><p>域演算示例：基于示例的运算</p></li><li><p>基于域演算设计的数据库语言：······</p></li></ul></li><li><p>为什么要学习关系模型与关系数据库语言</p></li><li><p>即将学习的内容概述</p><ul><li>理解关系，理解如何用关系对table进行抽象或说严格定义</li><li>理解关系/表所具有的各种特征，理解关系模型</li><li>熟练掌握关系代数，元组演算和域演算</li></ul></li></ul><h4 id="什么是关系"><a href="#什么是关系" class="headerlink" title="什么是关系"></a>什么是关系</h4><ul><li><p>什么是”表”</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为什么把表称为关系？</span><br><span class="line">怎样严格定义一个"表"？</span><br><span class="line">"表"和"关系"有什么异同？</span><br></pre></td></tr></tbody></table></figure></li><li><p>“表”的基本构成要素</p><ul><li><p>如何严格地定义table</p><p><img src="/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%20%E4%B8%80/E:%5Cnodejs%5Cnode_global%5Chexo%5Csource_posts%5C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%E4%B8%80%5C4.png" alt="4"></p><ul><li><p>首先定义”列”的取值范围”域”</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">域：</span><br><span class="line">* 一组值的集合，这组值具有相同的数据类型</span><br><span class="line">  如整数的集合，字符串的集合，全体学生的集合</span><br><span class="line">* 集合中元素的个数称为域的基数</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul></li></ul><p>​                         </p><h4 id="关系模型中的完整性约束"><a href="#关系模型中的完整性约束" class="headerlink" title="关系模型中的完整性约束"></a>关系模型中的完整性约束</h4><h2 id="数据库语言-SQL"><a href="#数据库语言-SQL" class="headerlink" title="数据库语言-SQL"></a>数据库语言-SQL</h2><h2 id="数据建模与数据库设计"><a href="#数据建模与数据库设计" class="headerlink" title="数据建模与数据库设计"></a>数据建模与数据库设计</h2><h2 id="数据库管理系统实现技术"><a href="#数据库管理系统实现技术" class="headerlink" title="数据库管理系统实现技术"></a>数据库管理系统实现技术</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据库系统&quot;&gt;&lt;a href=&quot;#数据库系统&quot; class=&quot;headerlink&quot; title=&quot;数据库系统&quot;&gt;&lt;/a&gt;数据库系统&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>前端入门</title>
    <link href="http://yoursite.com/2020/04/03/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2020/04/03/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8/</id>
    <published>2020-04-03T09:02:21.861Z</published>
    <updated>2020-04-05T14:48:58.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端入门-HTML-amp-CSS-学习"><a href="#前端入门-HTML-amp-CSS-学习" class="headerlink" title="前端入门 HTML&amp;CSS 学习"></a>前端入门 HTML&amp;CSS 学习</h1><a id="more"></a><h2 id="HTML入门教程-lt-结构-gt"><a href="#HTML入门教程-lt-结构-gt" class="headerlink" title="HTML入门教程 ##<结构>"></a>HTML入门教程 ##&lt;结构&gt;</h2><p>在网页中HTML专门负责网页的结构</p><h3 id="HTML编辑器"><a href="#HTML编辑器" class="headerlink" title="HTML编辑器"></a>HTML编辑器</h3><p>nodepad++，推荐使用vscode。<br>将vscode翻译成中文界面，下载插件Chinese</p><h3 id="HTML基础结构"><a href="#HTML基础结构" class="headerlink" title="HTML基础结构"></a>HTML基础结构</h3><pre><code>&lt;!doctype&amp;nbsp;html&gt;文档声明 &lt;html&gt;    &lt;head&gt;帮助浏览器或者搜索引擎解析网页        &lt;meta&gt;        &lt;title&gt;网页的标题&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        网页显示内容    &lt;/body&gt; &lt;/html&gt;</code></pre><p>   <strong>以上是网页的基本结构</strong></p><h3 id="HTML-在-lt-head-gt-内的标签"><a href="#HTML-在-lt-head-gt-内的标签" class="headerlink" title="HTML 在<head>内的标签"></a>HTML 在&lt;head&gt;内的标签</h3><ul><li><p>&lt;meta&gt;用来设置网页的元数据</p><ul><li><p>charset 指定网页的字符</p></li><li><p>name 指定的数据的名称 </p><p>&lt;keywords 表示网页的关键字&gt;<br>&lt;description 用于网站的指定描述&gt;<br><strong>具体详情查阅HTML手册</strong></p></li><li><p>content 指定的数据内容 <br></p></li></ul></li><li><p>&lt;title&gt;网页的标题&lt;/title&gt;显示在浏览器的搜索栏，根据title判断网页内容</p><h3 id="HTML-在-lt-body-gt-内的标签"><a href="#HTML-在-lt-body-gt-内的标签" class="headerlink" title="HTML 在<body>内的标签"></a>HTML 在&lt;body&gt;内的标签</h3><p>&lt;body&gt;表示网页的主体，网页所有可见的内容都应该写在body</p></li><li><p>自结束标签<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像&lt;img&gt;，&lt;imput&gt;</p></li><li><p>注释：&lt;!– 注释内容 –&gt;</p></li><li><p>标签属性：在标签中（开始标签或自结束标签）可以设置属性<br>属性是一个名值对（x=”y”或’y’）&lt;font&nbsp;&nbsp;x=”y”&gt;需要改变属性的内容&lt;/font&gt;&nbsp;&nbsp;x是名，y是值</p></li><li><p>实体语法 &lt;在网页中编写特殊符时会出现问题&gt;</p><p>  实体的名字;</p></li><li><p>语义化标签(1)：&lt;一般来说在块元素里面放行内元素&gt;</p><ul><li><p>块元素：对网页进行布局，在页面中独占一行的标签<br>&lt;p&gt;标签在页面中表示一个段落，<strong>p标签中不能放任何块元素</strong><br>&lt;hgroup&gt;标签为标题组，可以存放一组相关的标题</p></li><li><p>行内元素：用来包裹文字在页面中不会独占一行<br>&lt;em&gt;标签表示语音语调的加重<br>&lt;strong&gt;表示强调重要内容</p></li></ul></li><li><p>语义化标签（2）：结构化语义标签<br>  &lt;header&gt;表示网页的头部，<strong>可以有多个</strong><br>  &lt;main&gt;表示网页的主体，<strong>只能有一个</strong><br>  &lt;foot&gt;表示网页的底部<br>  &lt;nav&gt;表示网页的导航<br>  &lt;aside&gt;和主题相关的内容（侧边栏）<br>  &lt;artice&gt;表示一个独立文章<br>  &lt;section&gt;表示一个独立的区块</p><pre><code>**div 没有语义，就表示一个区块，目前主要的布局元素span没有任何语义，一般用来选中文字** </code></pre></li><li><p>语义化标签（3）：列表（list）列表之间可以相互嵌套</p><ul><li><p>有序列表</p><p>&lt;ui&gt;&lt;/ui&gt;创建</p></li><li><p>无序列表</p><p>&lt;oi&gt;&lt;/oi&gt;创建</p></li><li><p>定义列表</p><p>&lt;dl&gt;&lt;/dl&gt;创建<br>&lt;dt&gt;&lt;/dt&gt;定义到内容<br>&lt;dd&gt;&lt;/dd&gt;对内容进行解释说明</p></li><li><p>超链接：从当前页面跳转到其他页面或者当前页面的其他位置,<strong>在标签中可以除它外的人和元素</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&gt;&lt;/a&gt;定义超链接<br>&nbsp;&nbsp;&nbsp;&nbsp;href属性 指定跳转路径，<strong>相对路径绝对路径</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将href属性设置为#回到网页顶部，底部的设计利用id属性<br>&nbsp;&nbsp;&nbsp;&nbsp;id属性 元素的唯一标识，在同一个不能重复出现id属性<br>&nbsp;&nbsp;&nbsp;&nbsp;target属性，用来指定超链接打开的位置<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可选值：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_self 默认值在当前页面打开超链接。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_blank 在一个新的页面打开超链接。</p></li><li><p>图片标签：用于向当前页面引入一个外部图片<br><strong>img属性替换元素，具有块元素和行内元素的特点</strong></p><ul><li>使用img标签引入，img是自结束标签<br>属性&nbsp;&nbsp;&nbsp;&nbsp;src属性指定外部图片路径<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alt属性图片描述搜索引擎根据alt内容识别图片<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width,height属性</li><li>图片的格式</li></ul></li><li><p>内联框架：用于向当前界面引入一个其他页面</p><ul><li>使用&lt;iframe&gt;&lt;/iframe&gt;标签<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; src属性指定引入网页属性<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frameborder属性指定内联框架的边框</li></ul></li><li><p>音视频：</p><ul><li>audio标签引入外部音频<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls属性是否允许用户控制播放<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aotoplayer属性是否允许自动播放，<strong>大部分浏览器都不会自动对音乐进行播放</strong></li></ul></li></ul></li></ul><h2 id="CSS-lt-表现-gt-入门教程"><a href="#CSS-lt-表现-gt-入门教程" class="headerlink" title="CSS<表现>入门教程"></a>CSS&lt;表现&gt;入门教程</h2><p>css简述：css用来设置网页中的元素样式</p><p>修改元素样式</p><ul><li>第一种方法&lt;内联样式，行内元素&gt;：在标签内部通过style属性来设置元素的样式，<strong>该方法只能对一个标签生效</strong></li><li>第二种方法：内部样式表，将样式编写到head中的style标签里&lt;相当于#define&gt;</li><li>第三种方法：外部样式表，将css样式编写到.css文件中，然后通过link标签引用外部的css文件，**可以使用网页的缓存机制，从而加快网页的加载速度</li></ul><h3 id="css基本语法"><a href="#css基本语法" class="headerlink" title="css基本语法"></a>css基本语法</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">css的注释&lt;在&lt;style&gt;&lt;/style&gt;中&gt;/**/</span><br></pre></td></tr></tbody></table></figure><h4 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h4><p>通过选择器可以选中页面的指定元素</p><p>​    </p><p>​    </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前端入门-HTML-amp-CSS-学习&quot;&gt;&lt;a href=&quot;#前端入门-HTML-amp-CSS-学习&quot; class=&quot;headerlink&quot; title=&quot;前端入门 HTML&amp;amp;CSS 学习&quot;&gt;&lt;/a&gt;前端入门 HTML&amp;amp;CSS 学习&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java学习</title>
    <link href="http://yoursite.com/2020/04/03/Java%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/04/03/Java%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-04-03T09:02:21.839Z</published>
    <updated>2020-04-03T11:44:58.700Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java-学习"><a href="#java-学习" class="headerlink" title="java 学习"></a>java 学习</h2><a id="more"></a><h3 id="Java程序的安装"><a href="#Java程序的安装" class="headerlink" title="Java程序的安装"></a>Java程序的安装</h3><h3 id="Java语法"><a href="#Java语法" class="headerlink" title="Java语法"></a>Java语法</h3><h4 id="Java的基本语法"><a href="#Java的基本语法" class="headerlink" title="Java的基本语法"></a>Java的基本语法</h4><ul><li><p>注释</p></li><li><p>标识符</p><pre><code>通用规范</code></pre></li></ul><h4 id="Java中的变量与常量"><a href="#Java中的变量与常量" class="headerlink" title="Java中的变量与常量"></a>Java中的变量与常量</h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;java-学习&quot;&gt;&lt;a href=&quot;#java-学习&quot; class=&quot;headerlink&quot; title=&quot;java 学习&quot;&gt;&lt;/a&gt;java 学习&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库作业踩的坑</title>
    <link href="http://yoursite.com/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E8%B8%A9%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E8%B8%A9%E7%9A%84%E5%9D%91/</id>
    <published>2020-04-03T09:02:21.812Z</published>
    <updated>2020-04-03T10:59:13.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一次数据库作业踩的坑"><a href="#第一次数据库作业踩的坑" class="headerlink" title="第一次数据库作业踩的坑"></a>第一次数据库作业踩的坑</h1><p>作业要求：创建数据库，并在数据库中创建数据表，用SQL命令修改表的结构，将数据插入到表中，并完成SQL查询。</p><a id="more"></a><h2 id="一、启动服务"><a href="#一、启动服务" class="headerlink" title="一、启动服务"></a>一、启动服务</h2><ul><li>管理员授权 Windows，不然会启动失败</li><li>用 mysql -uroot -p密码</li></ul><h2 id="二、创建数据表"><a href="#二、创建数据表" class="headerlink" title="二、创建数据表"></a>二、创建数据表</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E8%B8%A9%E7%9A%84%E5%9D%91/2.png" alt="](1.png)&nbsp; &nbsp; ![" title="">                </div>                <div class="image-caption">](1.png)&nbsp; &nbsp; ![</div>            </figure><p>最后一个字段不能加‘，’</p><h2 id="三、用SQL命令修改表的结构"><a href="#三、用SQL命令修改表的结构" class="headerlink" title="三、用SQL命令修改表的结构"></a>三、用SQL命令修改表的结构</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一次数据库作业踩的坑&quot;&gt;&lt;a href=&quot;#第一次数据库作业踩的坑&quot; class=&quot;headerlink&quot; title=&quot;第一次数据库作业踩的坑&quot;&gt;&lt;/a&gt;第一次数据库作业踩的坑&lt;/h1&gt;&lt;p&gt;作业要求：创建数据库，并在数据库中创建数据表，用SQL命令修改表的结构，将数据插入到表中，并完成SQL查询。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>计算机组成原理&lt;一&gt;</title>
    <link href="http://yoursite.com/2020/03/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E4%B8%80/"/>
    <id>http://yoursite.com/2020/03/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E4%B8%80/</id>
    <published>2020-03-16T13:15:19.000Z</published>
    <updated>2020-04-03T10:59:13.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-计算机系统概论"><a href="#第一章-计算机系统概论" class="headerlink" title="第一章  计算机系统概论"></a>第一章  计算机系统概论</h1><a id="more"></a><h2 id="1-1-计算机系统简介"><a href="#1-1-计算机系统简介" class="headerlink" title="1.1 计算机系统简介"></a>1.1 计算机系统简介</h2><h3 id="计算机的软硬件概念"><a href="#计算机的软硬件概念" class="headerlink" title="计算机的软硬件概念"></a>计算机的软硬件概念</h3><p>计算机系统</p><ul><li><p>硬件：计算机实体</p></li><li><p>软件：具有各类特殊功能的（程序）</p></li></ul><p>软件分为</p><ul><li><p>系统软件： 用来管理整个计算机系统</p><p>   语言处理系统 操作系统 服务性程序 数据库管理系统 网络软件 </p></li><li><p>软件系统： 按任务需要编制成的各种软件</p></li></ul><h3 id="计算机系统的层次结构"><a href="#计算机系统的层次结构" class="headerlink" title="计算机系统的层次结构"></a>计算机系统的层次结构</h3><p>高级语言 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 虚拟机器M3 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用编译程序翻译成汇编语言</p><p>汇编语言 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 虚拟机器M2 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用汇编程序翻译成机器语言程序</p><p>操作系统 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 虚拟机器M &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用机器语言解释操作系统</p><p>机器语言 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 实际机器M1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用微指令解释机器指令</p><p>微指令系统 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 微程序机器M0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 由硬件直接执行微指令  </p><h3 id="计算机体系结构和计算机组成"><a href="#计算机体系结构和计算机组成" class="headerlink" title="计算机体系结构和计算机组成"></a>计算机体系结构和计算机组成</h3><ul><li><p>计算机体系结构 &lt;有无乘法指令&gt; ：计算机系统属性概念性的结构与功能特性 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（指令系统，数据类型，寻址技术，I/O机理）</p></li><li><p>计算机组成 &lt;如何实现乘法指令&gt; ：实现计算机体系结构所体现的属性 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （具体指令的实现）</p></li></ul><h2 id="计算机的组成"><a href="#计算机的组成" class="headerlink" title="计算机的组成"></a>计算机的组成</h2><h3 id="冯若依曼机的特点"><a href="#冯若依曼机的特点" class="headerlink" title="冯若依曼机的特点"></a>冯若依曼机的特点</h3><ul><li><p>计算机由五大件组成</p></li><li><p>指令和数据以同等地位存于存储器，可按地址寻访</p></li><li><p>指令和数据用二进制表示</p></li><li><p>指令由操作码和地址码组成</p></li><li><p>存储程序</p></li><li><p>以<strong>运算器</strong>为中心</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一章-计算机系统概论&quot;&gt;&lt;a href=&quot;#第一章-计算机系统概论&quot; class=&quot;headerlink&quot; title=&quot;第一章  计算机系统概论&quot;&gt;&lt;/a&gt;第一章  计算机系统概论&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
