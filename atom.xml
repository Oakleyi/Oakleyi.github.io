<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aabigale&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.aabigale.top/"/>
  <updated>2020-04-18T02:54:06.193Z</updated>
  <id>www.aabigale.top/</id>
  
  <author>
    <name>Aabigale</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java学习之高级篇</title>
    <link href="www.aabigale.top/2020/04/17/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%AB%98%E7%BA%A7%E7%AF%87/"/>
    <id>www.aabigale.top/2020/04/17/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%AB%98%E7%BA%A7%E7%AF%87/</id>
    <published>2020-04-17T12:18:51.793Z</published>
    <updated>2020-04-18T02:54:06.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高级篇"><a href="#高级篇" class="headerlink" title="高级篇"></a>高级篇</h1><a id="more"></a><h2 id="新技术"><a href="#新技术" class="headerlink" title="新技术"></a>新技术</h2><h3 id="Java-9"><a href="#Java-9" class="headerlink" title="Java 9"></a>Java 9</h3><ul><li>Jigsaw</li><li>Jshell</li><li>Reactive Streams</li></ul><h3 id="Java-10"><a href="#Java-10" class="headerlink" title="Java 10"></a>Java 10</h3><ul><li>局部变量类型推断</li><li>G1的并行Full GC</li><li>ThreadLocal握手机制</li></ul><h3 id="Java-11"><a href="#Java-11" class="headerlink" title="Java 11"></a>Java 11</h3><ul><li>ZGC</li><li>Epsilon</li><li>增强var</li></ul><h3 id="Java-12"><a href="#Java-12" class="headerlink" title="Java 12"></a>Java 12</h3><ul><li>Switch 表达式</li></ul><h3 id="Java-13"><a href="#Java-13" class="headerlink" title="Java 13"></a>Java 13</h3><ul><li>Text Blocks</li><li>Dynamic CDS Archives</li></ul><h3 id="Java-14"><a href="#Java-14" class="headerlink" title="Java 14"></a>Java 14</h3><ul><li>Java打包工具</li><li>更有价值的NullPointerException</li><li>record类型</li></ul><h3 id="Spring-5"><a href="#Spring-5" class="headerlink" title="Spring 5"></a>Spring 5</h3><ul><li>响应式编程</li></ul><h3 id="Spring-Boot-2-0"><a href="#Spring-Boot-2-0" class="headerlink" title="Spring Boot 2.0"></a>Spring Boot 2.0</h3><ul><li>http/2</li><li>http/3</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="使用单例"><a href="#使用单例" class="headerlink" title="使用单例"></a>使用单例</h3><h3 id="使用Future模式"><a href="#使用Future模式" class="headerlink" title="使用Future模式"></a>使用Future模式</h3><h3 id="使用线程池"><a href="#使用线程池" class="headerlink" title="使用线程池"></a>使用线程池</h3><h3 id="选择就绪"><a href="#选择就绪" class="headerlink" title="选择就绪"></a>选择就绪</h3><h3 id="减少上下文切换"><a href="#减少上下文切换" class="headerlink" title="减少上下文切换"></a>减少上下文切换</h3><h3 id="减少锁粒度"><a href="#减少锁粒度" class="headerlink" title="减少锁粒度"></a>减少锁粒度</h3><h3 id="数据压缩"><a href="#数据压缩" class="headerlink" title="数据压缩"></a>数据压缩</h3><h3 id="结果缓存"><a href="#结果缓存" class="headerlink" title="结果缓存"></a>结果缓存</h3><h3 id="Stream并行流"><a href="#Stream并行流" class="headerlink" title="Stream并行流"></a>Stream并行流</h3><h3 id="GC调优"><a href="#GC调优" class="headerlink" title="GC调优"></a>GC调优</h3><h3 id="JVM内存分配调优"><a href="#JVM内存分配调优" class="headerlink" title="JVM内存分配调优"></a>JVM内存分配调优</h3><h3 id="SQL调优"><a href="#SQL调优" class="headerlink" title="SQL调优"></a>SQL调优</h3><h2 id="线上问题分析"><a href="#线上问题分析" class="headerlink" title="线上问题分析"></a>线上问题分析</h2><h3 id="dump"><a href="#dump" class="headerlink" title="dump"></a>dump</h3><ul><li>线程Dump</li><li>内存Dump</li><li>gc情况</li></ul><h3 id="dump获取及分析工具"><a href="#dump获取及分析工具" class="headerlink" title="dump获取及分析工具"></a>dump获取及分析工具</h3><ul><li>jstack</li><li>jstat</li><li>jmap</li><li>jhat</li><li>Arthas</li></ul><h3 id="dump分析死锁"><a href="#dump分析死锁" class="headerlink" title="dump分析死锁"></a>dump分析死锁</h3><h3 id="dump分析内存泄露"><a href="#dump分析内存泄露" class="headerlink" title="dump分析内存泄露"></a>dump分析内存泄露</h3><h3 id="自己编写各种outofmemory，stackoverflow程序"><a href="#自己编写各种outofmemory，stackoverflow程序" class="headerlink" title="自己编写各种outofmemory，stackoverflow程序"></a>自己编写各种outofmemory，stackoverflow程序</h3><ul><li>HeapOutOfMemory</li><li>Young OutOfMemory</li><li>MethodArea OutOfMemory</li><li>ConstantPool OutOfMemory</li><li>DirectMemory OutOfMemory</li><li>Stack OutOfMemory Stack OverFlow</li></ul><h3 id="Arthas"><a href="#Arthas" class="headerlink" title="Arthas"></a>Arthas</h3><ul><li>jvm相关</li><li>class/classloader相关</li><li>monitor/watch/trace相关</li><li>options</li><li>管道</li><li>后台异步任务</li></ul><h3 id="常见问题解决思路"><a href="#常见问题解决思路" class="headerlink" title="常见问题解决思路"></a>常见问题解决思路</h3><ul><li>内存溢出</li><li>线程死锁</li><li>类加载冲突</li><li>load飙高</li><li>CPU利用率飙高</li><li>慢SQL</li></ul><h3 id="使用工具尝试解决以下问题，并写下总结"><a href="#使用工具尝试解决以下问题，并写下总结" class="headerlink" title="使用工具尝试解决以下问题，并写下总结"></a>使用工具尝试解决以下问题，并写下总结</h3><ul><li>当一个Java程序响应很慢时如何查找问题</li><li>当一个Java程序频繁FullGC时如何解决问题</li><li>如何查看垃圾回收日志</li><li>当一个Java应用发生OutOfMemory时该如何解决</li><li>如何判断是否出现死锁</li><li>如何判断是否存在内存泄露</li><li>使用Arthas快速排查Spring Boot应用404/401问题</li><li>使用Arthas排查线上应用日志打满问题</li><li>利用Arthas排查Spring Boot应用NoSuchMethodError</li></ul><h2 id="编译原理知识"><a href="#编译原理知识" class="headerlink" title="编译原理知识"></a>编译原理知识</h2><h3 id="编译与反编译"><a href="#编译与反编译" class="headerlink" title="编译与反编译"></a>编译与反编译</h3><h3 id="Java代码的编译与反编译"><a href="#Java代码的编译与反编译" class="headerlink" title="Java代码的编译与反编译"></a>Java代码的编译与反编译</h3><h3 id="Java的反编译工具"><a href="#Java的反编译工具" class="headerlink" title="Java的反编译工具"></a>Java的反编译工具</h3><ul><li>javap</li><li>jad</li><li>CRF</li></ul><h3 id="即时编译器"><a href="#即时编译器" class="headerlink" title="即时编译器"></a>即时编译器</h3><ul><li>编译器优化</li></ul><h2 id="操作系统知识"><a href="#操作系统知识" class="headerlink" title="操作系统知识"></a>操作系统知识</h2><h3 id="Linux的常用命令"><a href="#Linux的常用命令" class="headerlink" title="Linux的常用命令"></a>Linux的常用命令</h3><ul><li>find、grep、ps、cp、move、tar、head、tail、netstat、lsof、tree、wget、curl、ping、ssh、echo、free、top</li></ul><h3 id="进程间通信"><a href="#进程间通信" class="headerlink" title="进程间通信"></a>进程间通信</h3><h3 id="服务器性能指标"><a href="#服务器性能指标" class="headerlink" title="服务器性能指标"></a>服务器性能指标</h3><ul><li>load</li><li>CPU利用率</li><li>内存使用情况</li><li>qps</li><li>rt</li></ul><h3 id="进程同步"><a href="#进程同步" class="headerlink" title="进程同步"></a>进程同步</h3><ul><li>生产者消费者问题</li><li>哲学家就餐问题</li><li>读者写者问题</li></ul><h3 id="缓冲区溢出"><a href="#缓冲区溢出" class="headerlink" title="缓冲区溢出"></a>缓冲区溢出</h3><h3 id="分段和分页"><a href="#分段和分页" class="headerlink" title="分段和分页"></a>分段和分页</h3><h3 id="虚拟内存与主存"><a href="#虚拟内存与主存" class="headerlink" title="虚拟内存与主存"></a>虚拟内存与主存</h3><h3 id="虚拟内存管理"><a href="#虚拟内存管理" class="headerlink" title="虚拟内存管理"></a>虚拟内存管理</h3><h3 id="换页算法"><a href="#换页算法" class="headerlink" title="换页算法"></a>换页算法</h3><h2 id="数据库知识"><a href="#数据库知识" class="headerlink" title="数据库知识"></a>数据库知识</h2><h3 id="MySql-执行引擎"><a href="#MySql-执行引擎" class="headerlink" title="MySql 执行引擎"></a>MySql 执行引擎</h3><h3 id="MySQL-执行计划"><a href="#MySQL-执行计划" class="headerlink" title="MySQL 执行计划"></a>MySQL 执行计划</h3><ul><li>如何查看执行计划</li><li>如何根据执行计划进行SQL优化</li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><ul><li>Hash索引&amp;B树索引</li><li>普通索引&amp;唯一索引</li><li>聚集索引&amp;非聚集索引</li><li>覆盖索引</li><li>最左前缀原则</li><li>索引下推</li><li>索引失效</li></ul><h3 id="回表"><a href="#回表" class="headerlink" title="回表"></a>回表</h3><h3 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h3><h3 id="数据库事务和隔离级别"><a href="#数据库事务和隔离级别" class="headerlink" title="数据库事务和隔离级别"></a>数据库事务和隔离级别</h3><ul><li>事务的ACID</li><li>事务的隔离级别与读现象</li><li>事务能不能实现锁的功能</li></ul><h3 id="编码方式"><a href="#编码方式" class="headerlink" title="编码方式"></a>编码方式</h3><ul><li>utf8</li><li>utf8mb4</li><li>为什么不要在数据库中使用utf8编码</li></ul><h3 id="行数统计"><a href="#行数统计" class="headerlink" title="行数统计"></a>行数统计</h3><ul><li>count(1)、count(*)、count(字段)的区别</li><li>为什么建议使用count(*)</li></ul><h3 id="数据库锁"><a href="#数据库锁" class="headerlink" title="数据库锁"></a>数据库锁</h3><ul><li>共享锁、排它锁</li><li>行锁、表锁</li><li>乐观锁、悲观锁</li><li>使用数据库锁实现乐观锁</li><li>Gap Lock、Next-Key Lock</li></ul><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><ul><li>内连接</li><li>左连接</li><li>右连接</li></ul><h3 id="数据库主备搭建"><a href="#数据库主备搭建" class="headerlink" title="数据库主备搭建"></a>数据库主备搭建</h3><h3 id="log"><a href="#log" class="headerlink" title="log"></a>log</h3><ul><li>binlog</li><li>redolog</li></ul><h3 id="内存数据库"><a href="#内存数据库" class="headerlink" title="内存数据库"></a>内存数据库</h3><ul><li>h2</li></ul><h3 id="分库分表"><a href="#分库分表" class="headerlink" title="分库分表"></a>分库分表</h3><h3 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h3><h3 id="常用的nosql数据库"><a href="#常用的nosql数据库" class="headerlink" title="常用的nosql数据库"></a>常用的nosql数据库</h3><ul><li>redis</li><li>memcached</li></ul><h3 id="分别使用数据库锁、NoSql实现分布式锁"><a href="#分别使用数据库锁、NoSql实现分布式锁" class="headerlink" title="分别使用数据库锁、NoSql实现分布式锁"></a>分别使用数据库锁、NoSql实现分布式锁</h3><h3 id="性能调优"><a href="#性能调优" class="headerlink" title="性能调优"></a>性能调优</h3><h3 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h3><h2 id="数据结构与算法知识"><a href="#数据结构与算法知识" class="headerlink" title="数据结构与算法知识"></a>数据结构与算法知识</h2><h3 id="简单的数据结构"><a href="#简单的数据结构" class="headerlink" title="简单的数据结构"></a>简单的数据结构</h3><ul><li>栈</li><li>队列</li><li>链表</li><li>数组</li><li>哈希表</li><li>栈和队列的相同和不同之处</li><li>栈通常采用的两种存储结构</li><li>两个栈实现队列，和两个队列实现栈</li></ul><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><ul><li>二叉树</li><li>字典树</li><li>平衡树</li><li>排序树</li><li>B树</li><li>B+树</li><li>R树</li><li>多路树</li><li>红黑树</li></ul><h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><ul><li>大根堆</li><li>小根堆</li></ul><h3 id="图"><a href="#图" class="headerlink" title="图"></a>图</h3><ul><li>有向图</li><li>无向图</li><li>拓扑</li></ul><h3 id="稳定的排序算法"><a href="#稳定的排序算法" class="headerlink" title="稳定的排序算法"></a>稳定的排序算法</h3><ul><li>冒泡排序</li><li>插入排序</li><li>鸡尾酒排序</li><li>桶排序</li><li>计数排序</li><li>归并排序</li><li>原地归并排序</li><li>二叉排序树排序</li><li>鸽巢排序</li><li>基数排序</li><li>侏儒排序</li><li>图书馆排序</li><li>块排序</li></ul><h3 id="不稳定的排序算法"><a href="#不稳定的排序算法" class="headerlink" title="不稳定的排序算法"></a>不稳定的排序算法</h3><ul><li>选择排序</li><li>希尔排序</li><li>Clover排序算法</li><li>梳排序</li><li>堆排序</li><li>平滑排序</li><li>快速排序</li><li>内省排序</li><li>耐心排序</li></ul><h3 id="各种排序算法和时间复杂度"><a href="#各种排序算法和时间复杂度" class="headerlink" title="各种排序算法和时间复杂度"></a>各种排序算法和时间复杂度</h3><h3 id="深度优先和广度优先搜索"><a href="#深度优先和广度优先搜索" class="headerlink" title="深度优先和广度优先搜索"></a>深度优先和广度优先搜索</h3><h3 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h3><h3 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h3><h3 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h3><h3 id="hash算法"><a href="#hash算法" class="headerlink" title="hash算法"></a>hash算法</h3><h3 id="海量数据处理"><a href="#海量数据处理" class="headerlink" title="海量数据处理"></a>海量数据处理</h3><ul><li>分治</li><li>hash映射</li><li>堆排序</li><li>双层桶划分</li><li>Bloom Filter</li><li>bitmap</li><li>数据库索引</li><li>mapreduce等。</li></ul><h2 id="大数据知识"><a href="#大数据知识" class="headerlink" title="大数据知识"></a>大数据知识</h2><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><ul><li>Solr</li><li>Lucene</li><li>ElasticSearch</li></ul><h3 id="流式计算"><a href="#流式计算" class="headerlink" title="流式计算"></a>流式计算</h3><ul><li>Storm</li><li>Spark</li><li>Flink</li></ul><h3 id="Hadoop，离线计算"><a href="#Hadoop，离线计算" class="headerlink" title="Hadoop，离线计算"></a>Hadoop，离线计算</h3><ul><li>HDFS</li><li>MapReduce</li></ul><h3 id="分布式日志收集"><a href="#分布式日志收集" class="headerlink" title="分布式日志收集"></a>分布式日志收集</h3><ul><li>flume</li><li>kafka</li><li>logstash</li></ul><h3 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h3><ul><li>mahout</li></ul><h2 id="网络安全知识"><a href="#网络安全知识" class="headerlink" title="网络安全知识"></a>网络安全知识</h2><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><ul><li>XSS的防御</li></ul><h3 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h3><h3 id="注入攻击"><a href="#注入攻击" class="headerlink" title="注入攻击"></a>注入攻击</h3><ul><li>SQL注入</li><li>XML注入</li><li>CRLF注入</li></ul><h3 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h3><h3 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h3><ul><li>对称加密</li><li>非对称加密</li><li>哈希算法</li><li>加盐哈希算法</li></ul><h3 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h3><ul><li>MD5，SHA1、DES、AES、RSA、DSA</li></ul><h3 id="彩虹表"><a href="#彩虹表" class="headerlink" title="彩虹表"></a>彩虹表</h3><h3 id="DDOS攻击"><a href="#DDOS攻击" class="headerlink" title="DDOS攻击"></a>DDOS攻击</h3><h3 id="DOS攻击"><a href="#DOS攻击" class="headerlink" title="DOS攻击"></a>DOS攻击</h3><h3 id="DDOS攻击-1"><a href="#DDOS攻击-1" class="headerlink" title="DDOS攻击"></a>DDOS攻击</h3><h3 id="memcached为什么可以导致DDos攻击"><a href="#memcached为什么可以导致DDos攻击" class="headerlink" title="memcached为什么可以导致DDos攻击"></a>memcached为什么可以导致DDos攻击</h3><h3 id="什么是反射型DDoS"><a href="#什么是反射型DDoS" class="headerlink" title="什么是反射型DDoS"></a>什么是反射型DDoS</h3><h3 id="如何通过Hash碰撞进行DOS攻击"><a href="#如何通过Hash碰撞进行DOS攻击" class="headerlink" title="如何通过Hash碰撞进行DOS攻击"></a>如何通过Hash碰撞进行DOS攻击</h3><h3 id="SSL、TLS，HTTPS"><a href="#SSL、TLS，HTTPS" class="headerlink" title="SSL、TLS，HTTPS"></a>SSL、TLS，HTTPS</h3><h3 id="脱库、洗库、撞库"><a href="#脱库、洗库、撞库" class="headerlink" title="脱库、洗库、撞库"></a>脱库、洗库、撞库</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;高级篇&quot;&gt;&lt;a href=&quot;#高级篇&quot; class=&quot;headerlink&quot; title=&quot;高级篇&quot;&gt;&lt;/a&gt;高级篇&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java学习之进阶篇</title>
    <link href="www.aabigale.top/2020/04/17/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%BF%9B%E9%98%B6%E7%AF%87/"/>
    <id>www.aabigale.top/2020/04/17/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%BF%9B%E9%98%B6%E7%AF%87/</id>
    <published>2020-04-17T12:04:26.505Z</published>
    <updated>2020-04-18T02:54:06.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><a id="more"></a><h2 id="Java底层知识"><a href="#Java底层知识" class="headerlink" title="Java底层知识"></a>Java底层知识</h2><h3 id="字节码"><a href="#字节码" class="headerlink" title="字节码"></a>字节码</h3><h3 id="class文件格式"><a href="#class文件格式" class="headerlink" title="class文件格式"></a>class文件格式</h3><h3 id="CAFEBABE"><a href="#CAFEBABE" class="headerlink" title="CAFEBABE"></a>CAFEBABE</h3><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><h3 id="用位运算实现加、减、乘、除、取余"><a href="#用位运算实现加、减、乘、除、取余" class="headerlink" title="用位运算实现加、减、乘、除、取余"></a>用位运算实现加、减、乘、除、取余</h3><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><h3 id="设计模式的六大原则"><a href="#设计模式的六大原则" class="headerlink" title="设计模式的六大原则"></a>设计模式的六大原则</h3><ul><li>开闭原则（Open Close Principle）</li><li>里氏代换原则（Liskov Substitution Principle）</li><li>依赖倒转原则（Dependence Inversion Principle）</li><li>接口隔离原则（Interface Segregation Principle）</li><li>迪米特法则（最少知道原则）（Demeter Principle）</li><li>合成复用原则（Composite Reuse Principle）</li></ul><h3 id="创建型设计模式"><a href="#创建型设计模式" class="headerlink" title="创建型设计模式"></a>创建型设计模式</h3><ul><li>单例模式</li><li>抽象工厂模式</li><li>建造者模式</li><li>工厂模式</li><li>原型模式</li></ul><h3 id="结构型设计模式"><a href="#结构型设计模式" class="headerlink" title="结构型设计模式"></a>结构型设计模式</h3><ul><li>适配器模式</li><li>桥接模式</li><li>装饰模式</li><li>组合模式</li><li>外观模式</li><li>享元模式</li><li>代理模式</li></ul><h3 id="行为型设计模式"><a href="#行为型设计模式" class="headerlink" title="行为型设计模式"></a>行为型设计模式</h3><ul><li>模版方法模式</li><li>命令模式</li><li>迭代器模式</li><li>观察者模式</li><li>中介者模式</li><li>备忘录模式</li><li>解释器模式</li><li>状态模式</li><li>策略模式</li><li>责任链模式</li><li>访问者模式</li></ul><h3 id="单例的七种写法"><a href="#单例的七种写法" class="headerlink" title="单例的七种写法"></a>单例的七种写法</h3><ul><li>懒汉——线程不安全</li><li>懒汉——线程安全</li><li>饿汉</li><li>饿汉——变种</li><li>静态内部类</li><li>枚举</li><li>双重校验锁</li></ul><h3 id="为什么推荐使用枚举实现单例？"><a href="#为什么推荐使用枚举实现单例？" class="headerlink" title="为什么推荐使用枚举实现单例？"></a>为什么推荐使用枚举实现单例？</h3><h3 id="三种工厂模式的区别及联系"><a href="#三种工厂模式的区别及联系" class="headerlink" title="三种工厂模式的区别及联系"></a>三种工厂模式的区别及联系</h3><ul><li>简单工厂、工厂方法、模板工厂</li></ul><h3 id="会使用常用设计模式"><a href="#会使用常用设计模式" class="headerlink" title="会使用常用设计模式"></a>会使用常用设计模式</h3><ul><li>工厂模式</li><li>适配器模式</li><li>策略模式</li><li>模板方法模式</li><li>观察者模式</li><li>外观模式</li><li>代理模式</li></ul><h3 id="不用synchronized和lock，实现线程安全的单例模式"><a href="#不用synchronized和lock，实现线程安全的单例模式" class="headerlink" title="不用synchronized和lock，实现线程安全的单例模式"></a>不用synchronized和lock，实现线程安全的单例模式</h3><h3 id="nio和reactor设计模式"><a href="#nio和reactor设计模式" class="headerlink" title="nio和reactor设计模式"></a>nio和reactor设计模式</h3><h3 id="Spring中用到了哪些设计模式"><a href="#Spring中用到了哪些设计模式" class="headerlink" title="Spring中用到了哪些设计模式"></a>Spring中用到了哪些设计模式</h3><h2 id="网络编程知识"><a href="#网络编程知识" class="headerlink" title="网络编程知识"></a>网络编程知识</h2><h3 id="常用协议"><a href="#常用协议" class="headerlink" title="常用协议"></a>常用协议</h3><ul><li>tcp、udp、http、https</li><li>用Java实现FTP、SMTP协议</li></ul><h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><ul><li>每一层的主要协议</li></ul><h3 id="TCP-UDP"><a href="#TCP-UDP" class="headerlink" title="TCP/UDP"></a>TCP/UDP</h3><ul><li>三次握手与四次关闭</li><li>流量控制和拥塞控制</li><li>tcp粘包与拆包</li></ul><h3 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h3><ul><li>IPV4</li><li>IPV6</li></ul><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><ul><li>http/1.0 http/1.1 http/2之间的区别</li><li>http和https的区别</li><li>http中 get和post区别</li><li>常见的web请求返回的状态码</li><li>404、302、301、500分别代表什么</li><li>用Java写一个简单的静态文件的HTTP服务器</li></ul><h3 id="http-2"><a href="#http-2" class="headerlink" title="http/2"></a>http/2</h3><h3 id="Java-RMI，Socket，HttpClient"><a href="#Java-RMI，Socket，HttpClient" class="headerlink" title="Java RMI，Socket，HttpClient"></a>Java RMI，Socket，HttpClient</h3><h3 id="cookie-与-session"><a href="#cookie-与-session" class="headerlink" title="cookie 与 session"></a>cookie 与 session</h3><ul><li>cookie被禁用，如何实现session</li></ul><h3 id="了解nginx和apache服务器的特性并搭建一个对应的服务器"><a href="#了解nginx和apache服务器的特性并搭建一个对应的服务器" class="headerlink" title="了解nginx和apache服务器的特性并搭建一个对应的服务器"></a>了解nginx和apache服务器的特性并搭建一个对应的服务器</h3><h3 id="进程间通讯的方式"><a href="#进程间通讯的方式" class="headerlink" title="进程间通讯的方式"></a>进程间通讯的方式</h3><h3 id="什么是CDN？如果实现？"><a href="#什么是CDN？如果实现？" class="headerlink" title="什么是CDN？如果实现？"></a>什么是CDN？如果实现？</h3><h3 id="DNS？"><a href="#DNS？" class="headerlink" title="DNS？"></a>DNS？</h3><ul><li>什么是DNS</li><li>记录类型:A记录、CNAME记录、AAAA记录等</li><li>域名解析</li><li>根域名服务器</li><li>DNS污染</li><li>DNS劫持</li><li>公共DNS：114 DNS、Google DNS、OpenDNS</li></ul><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><ul><li>正向代理</li><li>反向代理</li><li>反向代理服务器</li></ul><h2 id="框架知识"><a href="#框架知识" class="headerlink" title="框架知识"></a>框架知识</h2><h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><ul><li>生命周期</li><li>线程安全问题</li><li>filter和listener</li><li>web.xml中常用配置及作用</li></ul><h3 id="Hibernate"><a href="#Hibernate" class="headerlink" title="Hibernate"></a>Hibernate</h3><ul><li>什么是OR Mapping</li><li>Hibernate的缓存机制</li><li>Hibernate的懒加载</li><li>Hibernate/Ibatis/MyBatis之间的区别</li></ul><h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h3><ul><li>Mybatis缓存机制</li><li><code>#{}</code>和<code>${}</code>的区别</li><li>mapper中传递多个参数</li><li>Mybatis动态sql</li><li>Mybatis的延迟加载</li></ul><h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h3><ul><li>Bean的初始化</li><li>AOP原理</li><li>实现Spring的IOC</li><li>spring四种依赖注入方式</li></ul><h3 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h3><ul><li>什么是MVC</li><li>Spring mvc与Struts mvc的区别</li></ul><h3 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h3><ul><li>Spring Boot 2.0</li><li>起步依赖</li><li>自动配置</li><li>Spring Boot的starter原理</li><li>自己实现一个starter</li><li>为什么Spring Boot可以通过main启动web项目</li></ul><h3 id="Spring-Security"><a href="#Spring-Security" class="headerlink" title="Spring Security"></a>Spring Security</h3><h3 id="Spring-Cloud"><a href="#Spring-Cloud" class="headerlink" title="Spring Cloud"></a>Spring Cloud</h3><ul><li>服务发现与注册：Eureka、Zookeeper、Consul</li><li>负载均衡：Feign、Spring Cloud Loadbalance</li><li>服务配置：Spring Cloud Config</li><li>服务限流与熔断：Hystrix</li><li>服务链路追踪：Dapper</li><li>服务网关、安全、消息</li></ul><h2 id="应用服务器知识"><a href="#应用服务器知识" class="headerlink" title="应用服务器知识"></a>应用服务器知识</h2><h3 id="JBoss"><a href="#JBoss" class="headerlink" title="JBoss"></a>JBoss</h3><h3 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h3><h3 id="jetty"><a href="#jetty" class="headerlink" title="jetty"></a>jetty</h3><h3 id="Weblogic"><a href="#Weblogic" class="headerlink" title="Weblogic"></a>Weblogic</h3><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="git-amp-svn"><a href="#git-amp-svn" class="headerlink" title="git &amp; svn"></a>git &amp; svn</h3><h3 id="maven-amp-gradle"><a href="#maven-amp-gradle" class="headerlink" title="maven &amp; gradle"></a>maven &amp; gradle</h3><h3 id="git技巧"><a href="#git技巧" class="headerlink" title="git技巧"></a>git技巧</h3><ul><li>分支合并</li><li>冲突解决</li><li>提交回滚</li></ul><h3 id="maven技巧"><a href="#maven技巧" class="headerlink" title="maven技巧"></a>maven技巧</h3><ul><li>依赖树</li><li>依赖仲裁</li></ul><h3 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h3><ul><li>常用插件：Maven Helper、FindBugs-IDEA、阿里巴巴代码规约检测、GsonFormat、Lombok plugin、.ignore、Mybatis plugin</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;进阶篇&quot;&gt;&lt;a href=&quot;#进阶篇&quot; class=&quot;headerlink&quot; title=&quot;进阶篇&quot;&gt;&lt;/a&gt;进阶篇&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java学习之底层篇</title>
    <link href="www.aabigale.top/2020/04/17/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BA%95%E5%B1%82%E7%AF%87/"/>
    <id>www.aabigale.top/2020/04/17/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BA%95%E5%B1%82%E7%AF%87/</id>
    <published>2020-04-17T11:53:08.718Z</published>
    <updated>2020-04-18T02:54:06.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="底层篇"><a href="#底层篇" class="headerlink" title="底层篇"></a>底层篇</h1><a id="more"></a><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3><h4 id="JVM内存结构"><a href="#JVM内存结构" class="headerlink" title="JVM内存结构"></a>JVM内存结构</h4><ul><li>运行时数据区</li><li>运行时数据区哪些是线程独享</li><li>堆和栈区别</li><li>方法区在不同版本JDK中的位置</li><li>堆外内存</li><li>TLAB</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basement/jvm/stack-alloc" target="_blank" rel="noopener">Java中的对象一定在堆上分配吗？</a></li></ul><h4 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h4><ul><li>GC算法：标记清除、引用计数、复制、标记压缩、分代回收、增量式回收</li><li>GC参数</li><li>对象存活的判定</li><li>垃圾收集器（CMS、G1、ZGC、Epsilon）</li></ul><h4 id="JVM参数及调优"><a href="#JVM参数及调优" class="headerlink" title="JVM参数及调优"></a>JVM参数及调优</h4><ul><li>-Xmx</li><li>-Xmn</li><li>-Xms</li><li>-Xss</li><li>-XX:SurvivorRatio</li><li>-XX:PermSize</li><li>-XX:MaxPermSize</li><li>-XX:MaxTenuringThreshold</li></ul><h4 id="Java对象模型"><a href="#Java对象模型" class="headerlink" title="Java对象模型"></a>Java对象模型</h4><ul><li>oop-klass</li><li>对象头</li></ul><h4 id="HotSpot"><a href="#HotSpot" class="headerlink" title="HotSpot"></a>HotSpot</h4><ul><li>即时编译器</li><li>编译优化</li></ul><h4 id="Java内存模型"><a href="#Java内存模型" class="headerlink" title="Java内存模型"></a>Java内存模型</h4><ul><li>计算机内存模型</li><li>缓存一致性</li><li>MESI协议</li><li>可见性</li><li>原子性</li><li>顺序性</li><li>happens-before</li><li>as-if-serial</li><li>内存屏障</li><li>synchronized</li><li>volatile</li><li>final</li><li>锁</li></ul><h4 id="虚拟机性能监控与故障处理工具"><a href="#虚拟机性能监控与故障处理工具" class="headerlink" title="虚拟机性能监控与故障处理工具"></a>虚拟机性能监控与故障处理工具</h4><ul><li>jps</li><li>jstack</li><li>jmap</li><li>jstat</li><li>jconsole</li><li>jinfo</li><li>jhat</li><li>javap</li><li>btrace</li><li>TProfiler</li><li>jlink</li><li>Arthas</li></ul><h4 id="类加载机制"><a href="#类加载机制" class="headerlink" title="类加载机制"></a>类加载机制</h4><ul><li>classLoader</li><li>类加载过程是线程安全的吗？</li><li>类加载过程</li><li>双亲委派（破坏双亲委派）</li><li>模块化（jboss modules、osgi、jigsaw）</li></ul><h4 id="打包工具"><a href="#打包工具" class="headerlink" title="打包工具"></a>打包工具</h4><ul><li>jar</li><li>jlink</li><li>jpackage</li></ul><h4 id="编译与反编译"><a href="#编译与反编译" class="headerlink" title="编译与反编译"></a>编译与反编译</h4><ul><li>什么是编译</li><li>什么是反编译</li><li>编译工具：javac</li><li>反编译工具：javap 、jad 、CRF</li></ul><h4 id="JIT"><a href="#JIT" class="headerlink" title="JIT"></a>JIT</h4><ul><li>JIT优化（逃逸分析、栈上分配、标量替换、锁优化）</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;底层篇&quot;&gt;&lt;a href=&quot;#底层篇&quot; class=&quot;headerlink&quot; title=&quot;底层篇&quot;&gt;&lt;/a&gt;底层篇&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库系统概述二</title>
    <link href="www.aabigale.top/2020/04/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%E4%BA%8C/"/>
    <id>www.aabigale.top/2020/04/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%E4%BA%8C/</id>
    <published>2020-04-10T08:26:01.025Z</published>
    <updated>2020-04-20T07:41:58.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库系统之三–数据建模与数据库设计"><a href="#数据库系统之三–数据建模与数据库设计" class="headerlink" title="数据库系统之三–数据建模与数据库设计"></a>数据库系统之三–数据建模与数据库设计</h1><a id="more"></a><h2 id="数据建模：思想与方法"><a href="#数据建模：思想与方法" class="headerlink" title="数据建模：思想与方法"></a>数据建模：思想与方法</h2><h3 id="为什么要数据建模和数据库设计"><a href="#为什么要数据建模和数据库设计" class="headerlink" title="为什么要数据建模和数据库设计"></a>为什么要数据建模和数据库设计</h3><h3 id="E-R模型-–-数据建模之基本思想"><a href="#E-R模型-–-数据建模之基本思想" class="headerlink" title="E - R模型 – 数据建模之基本思想"></a>E - R模型 – 数据建模之基本思想</h3><h3 id="E-R-模型-–-表达方法之-Chen-方法"><a href="#E-R-模型-–-表达方法之-Chen-方法" class="headerlink" title="E - R 模型 – 表达方法之 Chen 方法"></a>E - R 模型 – 表达方法之 Chen 方法</h3><h3 id="E-R-模型-–-表达方法之-Crow’s-foot-方法"><a href="#E-R-模型-–-表达方法之-Crow’s-foot-方法" class="headerlink" title="E - R 模型 – 表达方法之 Crow’s foot 方法"></a>E - R 模型 – 表达方法之 Crow’s foot 方法</h3><h3 id="数据建模之案例讲解"><a href="#数据建模之案例讲解" class="headerlink" title="数据建模之案例讲解"></a>数据建模之案例讲解</h3><h3 id="数据库设计中的抽象"><a href="#数据库设计中的抽象" class="headerlink" title="数据库设计中的抽象"></a>数据库设计中的抽象</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">该部分的重难点</span><br><span class="line">* 理解 E-R 模型进行数据模型的基本思想，熟练掌握 E-R 模型的 Crow's foot 表达方法</span><br><span class="line">* 熟练运用 Crow's foot 方法进行数据建模，即建模训练</span><br></pre></td></tr></tbody></table></figure><h2 id="12"><a href="#12" class="headerlink" title="12"></a>12</h2><h2 id="数据库设计过程"><a href="#数据库设计过程" class="headerlink" title="数据库设计过程"></a>数据库设计过程</h2><h3 id="数据库设计过程与设计方法"><a href="#数据库设计过程与设计方法" class="headerlink" title="数据库设计过程与设计方法"></a>数据库设计过程与设计方法</h3><h3 id="E-R-图-IDEF1X-向关系模式的转换"><a href="#E-R-图-IDEF1X-向关系模式的转换" class="headerlink" title="E - R 图 / IDEF1X 向关系模式的转换"></a>E - R 图 / IDEF1X 向关系模式的转换</h3><h3 id="不正确数据库设计引发的问题及其解决"><a href="#不正确数据库设计引发的问题及其解决" class="headerlink" title="不正确数据库设计引发的问题及其解决"></a>不正确数据库设计引发的问题及其解决</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">该部分重难点</span><br><span class="line">* 理解数据库设计的四个过程</span><br><span class="line">* 理解不正确数据库设计引发的问题，为数据库理论的学习奠定问题基础</span><br><span class="line">* 理解不正确数据库设计引发的问题，提升数据建模与数据库设计能力</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据库系统之三–数据建模与数据库设计&quot;&gt;&lt;a href=&quot;#数据库系统之三–数据建模与数据库设计&quot; class=&quot;headerlink&quot; title=&quot;数据库系统之三–数据建模与数据库设计&quot;&gt;&lt;/a&gt;数据库系统之三–数据建模与数据库设计&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>JAVA实训作业</title>
    <link href="www.aabigale.top/2020/04/09/JAVA%E5%AE%9E%E8%AE%AD%E4%BD%9C%E4%B8%9A/"/>
    <id>www.aabigale.top/2020/04/09/JAVA%E5%AE%9E%E8%AE%AD%E4%BD%9C%E4%B8%9A/</id>
    <published>2020-04-09T07:59:31.340Z</published>
    <updated>2020-04-12T05:46:52.794Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JAVA实训作业"><a href="#JAVA实训作业" class="headerlink" title="JAVA实训作业"></a>JAVA实训作业</h1><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JAVA实训作业&quot;&gt;&lt;a href=&quot;#JAVA实训作业&quot; class=&quot;headerlink&quot; title=&quot;JAVA实训作业&quot;&gt;&lt;/a&gt;JAVA实训作业&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>前端之CSS</title>
    <link href="www.aabigale.top/2020/04/07/%E5%89%8D%E7%AB%AF%E4%B9%8BCSS/"/>
    <id>www.aabigale.top/2020/04/07/%E5%89%8D%E7%AB%AF%E4%B9%8BCSS/</id>
    <published>2020-04-07T06:02:28.960Z</published>
    <updated>2020-04-08T11:53:19.814Z</updated>
    
    <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>在vscode中配置Java环境</title>
    <link href="www.aabigale.top/2020/04/07/%E5%9C%A8vscode%E4%B8%AD%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83/"/>
    <id>www.aabigale.top/2020/04/07/%E5%9C%A8vscode%E4%B8%AD%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83/</id>
    <published>2020-04-07T05:19:19.431Z</published>
    <updated>2020-04-08T11:53:19.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在vscode中配置Java环境"><a href="#在vscode中配置Java环境" class="headerlink" title="在vscode中配置Java环境"></a>在vscode中配置Java环境</h1><a id="more"></a><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>官网下载</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="配置中文"><a href="#配置中文" class="headerlink" title="配置中文"></a>配置中文</h3><ul><li>点击旁边的 Extensions</li><li>搜索框编辑 Chinese </li><li>下载 Chinese ( Simplified )</li></ul><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>​            可以看自己喜好</p><h3 id="下载关于编辑-Java-的插件"><a href="#下载关于编辑-Java-的插件" class="headerlink" title="下载关于编辑 Java 的插件"></a>下载关于编辑 Java 的插件</h3><p>​     </p><ul><li><p>便于编辑而安装的插件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Beautify：代码高亮</span><br><span class="line">Terminal：直接唤起终端</span><br><span class="line">Project Manager：多个项目切换</span><br><span class="line">Auto Close Tag：标签自动闭合</span><br><span class="line">Eclipse Keymap：可以通过一些快捷键更方便地编写Java</span><br></pre></td></tr></tbody></table></figure></li><li><p>配置 Java 环境而安装的插件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Language Support for Java(TM) by Red Hat 运行 Java 代码的</span><br><span class="line">Debugger for Java 调试 Java 程序</span><br><span class="line">Java Test Runner 测试 Java 程序</span><br><span class="line">Maven for Java Java环境下构建应用程序的软件</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="设置工作环境"><a href="#设置工作环境" class="headerlink" title="设置工作环境"></a>设置工作环境</h2><ul><li>点击菜单 File( 文件 ) –&gt; Save Workspace As····( 将工作区另存为)····</li><li>将新建的 ( 文件名 ) 文件添加至工作区</li></ul><h2 id="新建-Java-项目"><a href="#新建-Java-项目" class="headerlink" title="新建 Java 项目"></a>新建 Java 项目</h2><ul><li>在工作区点击菜单栏 View ( 查看 ) –&gt; command Palette ( 命令面板)</li><li>输入Java，选择Java : Create Java Project，新建Java项目 </li><li>在弹出的框中，选择<strong>工作空间文件夹</strong></li><li>接着输入项目名称，回车</li><li>会自动生成一段打印hello Java代码</li><li>编译运行</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在vscode中配置Java环境&quot;&gt;&lt;a href=&quot;#在vscode中配置Java环境&quot; class=&quot;headerlink&quot; title=&quot;在vscode中配置Java环境&quot;&gt;&lt;/a&gt;在vscode中配置Java环境&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>html</title>
    <link href="www.aabigale.top/2020/04/06/html/"/>
    <id>www.aabigale.top/2020/04/06/html/</id>
    <published>2020-04-06T13:59:36.547Z</published>
    <updated>2020-04-08T11:53:19.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web前端开发最佳实践"><a href="#web前端开发最佳实践" class="headerlink" title="web前端开发最佳实践"></a>web前端开发最佳实践</h1><a id="more"></a><h2 id="高效web前端开发综述"><a href="#高效web前端开发综述" class="headerlink" title="高效web前端开发综述"></a>高效web前端开发综述</h2><h3 id="web前端开发概述"><a href="#web前端开发概述" class="headerlink" title="web前端开发概述"></a>web前端开发概述</h3><h3 id="高效web前端开发"><a href="#高效web前端开发" class="headerlink" title="高效web前端开发"></a>高效web前端开发</h3><h2 id="HTML相关开发最佳实践"><a href="#HTML相关开发最佳实践" class="headerlink" title="HTML相关开发最佳实践"></a>HTML相关开发最佳实践</h2><h3 id="标准的HTML代码"><a href="#标准的HTML代码" class="headerlink" title="标准的HTML代码"></a>标准的HTML代码</h3><h3 id="高可读性的HTML"><a href="#高可读性的HTML" class="headerlink" title="高可读性的HTML"></a>高可读性的HTML</h3><h3 id="积极拥抱HTML5"><a href="#积极拥抱HTML5" class="headerlink" title="积极拥抱HTML5"></a>积极拥抱HTML5</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;web前端开发最佳实践&quot;&gt;&lt;a href=&quot;#web前端开发最佳实践&quot; class=&quot;headerlink&quot; title=&quot;web前端开发最佳实践&quot;&gt;&lt;/a&gt;web前端开发最佳实践&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>在hexo搭建的博客中引入图片</title>
    <link href="www.aabigale.top/2020/04/06/%E5%9C%A8hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%BC%95%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>www.aabigale.top/2020/04/06/%E5%9C%A8hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%BC%95%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2020-04-06T06:04:08.995Z</published>
    <updated>2020-04-06T06:04:37.536Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在hexo搭建的博客中引入图片"><a href="#在hexo搭建的博客中引入图片" class="headerlink" title="在hexo搭建的博客中引入图片"></a>在hexo搭建的博客中引入图片</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在hexo搭建的博客中引入图片&quot;&gt;&lt;a href=&quot;#在hexo搭建的博客中引入图片&quot; class=&quot;headerlink&quot; title=&quot;在hexo搭建的博客中引入图片&quot;&gt;&lt;/a&gt;在hexo搭建的博客中引入图片&lt;/h1&gt;&lt;script&gt;
        docu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="www.aabigale.top/2020/04/06/Linux/"/>
    <id>www.aabigale.top/2020/04/06/Linux/</id>
    <published>2020-04-06T03:15:10.256Z</published>
    <updated>2020-04-14T11:33:34.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><a id="more"></a><h2 id="部署虚拟环境安装-Linux-系统："><a href="#部署虚拟环境安装-Linux-系统：" class="headerlink" title="部署虚拟环境安装 Linux 系统："></a>部署虚拟环境安装 Linux 系统：</h2><h2 id="新手必须掌握的-Linux-命令"><a href="#新手必须掌握的-Linux-命令" class="headerlink" title="新手必须掌握的 Linux 命令"></a>新手必须掌握的 Linux 命令</h2><p>执行 Linux 命令的格式</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令名称 [命令参数] [命令对象] &lt;中间用空格隔开&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="强大好用的-Shell"><a href="#强大好用的-Shell" class="headerlink" title="强大好用的 Shell"></a>强大好用的 Shell</h3><ul><li>通过上下方向键来调取过往执行过的 Linux 命令</li><li>命令或参数仅需输入前几位就可以用 tab 键补全</li><li>具有强大的批处理脚本</li><li>具有实用的环境变量功能</li></ul><h3 id="执行帮助文档命令"><a href="#执行帮助文档命令" class="headerlink" title="执行帮助文档命令"></a>执行帮助文档命令</h3><h3 id="常用系统工作命令"><a href="#常用系统工作命令" class="headerlink" title="常用系统工作命令"></a>常用系统工作命令</h3><ul><li><p>echo 命令 ：用于在终端输出字符串或变量提取后的值，格式为 “ echo [字符串 | $变量] “</p></li><li><p>date 命令 ：用于显示及设置系统的时间或日期，格式为 “ date [选项] [+指定的格式]”</p><table><thead><tr><th align="center">参数</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">%t</td><td align="center">跳格 [ tab 键]</td></tr><tr><td align="center">%H</td><td align="center">小时（00 ~ 23）</td></tr><tr><td align="center">%I</td><td align="center">小时（00 ~ 12）</td></tr><tr><td align="center">%M</td><td align="center">分钟（00 ~ 59）</td></tr><tr><td align="center">%S</td><td align="center">秒（00 ~ 59）</td></tr><tr><td align="center">%j</td><td align="center">今年中的第几天</td></tr></tbody></table></li></ul><ul><li><p>reboot 命令：用于重启系统，格式为 reboot</p></li><li><p>poweroff 命令：用于关闭系统，格式为 poweroff</p></li><li><p>wget 命令：用于在终端中下载网络文件，格式为 “ wget [参数] 下载地址”</p><p><img src="E:%5Cnodejs%5Cnode_global%5Chexo%5Csource_posts%5C9.png" alt="9"></p></li><li><p>ps 命令：用于查看系统中的进程状态，格式为 “ps [参数]”</p><table><thead><tr><th align="center">参数</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">-a</td><td align="center">显示所有进程（包括其他用户的进程）</td></tr><tr><td align="center">-u</td><td align="center">用户以及其他详细信息</td></tr><tr><td align="center">-x</td><td align="center">显示没有控制终端的进程</td></tr></tbody></table></li></ul><ul><li><h3 id="系统状态检测命令"><a href="#系统状态检测命令" class="headerlink" title="系统状态检测命令"></a>系统状态检测命令</h3></li></ul><h3 id="工作目录切换命令"><a href="#工作目录切换命令" class="headerlink" title="工作目录切换命令"></a>工作目录切换命令</h3><h3 id="文本文件编辑命令"><a href="#文本文件编辑命令" class="headerlink" title="文本文件编辑命令"></a>文本文件编辑命令</h3><h3 id="文件目录管理命令"><a href="#文件目录管理命令" class="headerlink" title="文件目录管理命令"></a>文件目录管理命令</h3><h3 id="打包压缩与搜索命令"><a href="#打包压缩与搜索命令" class="headerlink" title="打包压缩与搜索命令"></a>打包压缩与搜索命令</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;linux&quot;&gt;&lt;a href=&quot;#linux&quot; class=&quot;headerlink&quot; title=&quot;linux&quot;&gt;&lt;/a&gt;linux&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="www.aabigale.top/2020/04/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>www.aabigale.top/2020/04/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2020-04-05T13:51:43.137Z</published>
    <updated>2020-04-06T06:03:33.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><a id="more"></a><h2 id="数据结构绪论"><a href="#数据结构绪论" class="headerlink" title="数据结构绪论"></a>数据结构绪论</h2><h3 id="基本概念与术语"><a href="#基本概念与术语" class="headerlink" title="基本概念与术语"></a>基本概念与术语</h3><h3 id="逻辑结构与物理结构"><a href="#逻辑结构与物理结构" class="headerlink" title="逻辑结构与物理结构"></a>逻辑结构与物理结构</h3><h3 id="抽象数据结构"><a href="#抽象数据结构" class="headerlink" title="抽象数据结构"></a>抽象数据结构</h3><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h3 id="时间复杂度与空间复杂度"><a href="#时间复杂度与空间复杂度" class="headerlink" title="时间复杂度与空间复杂度"></a>时间复杂度与空间复杂度</h3><h2 id="线性表（list）"><a href="#线性表（list）" class="headerlink" title="线性表（list）"></a>线性表（list）</h2><h3 id="线性表的定义"><a href="#线性表的定义" class="headerlink" title="线性表的定义"></a>线性表的定义</h3><p><strong>线性表：零个或多个数据元素的有限序列</strong></p><p>线性表元素的个数 n (n&gt;=0)，定义为线性表的长度，当 n=0 时，称为空表。<strong>非空表中的每个数据元素都有一个确定的位置</strong></p><p><strong>在较复杂的线性表中，一个数据元素可以由若干个数据项组成</strong></p><table><thead><tr><th>学号</th><th>姓名</th><th>性别</th><th>出生年月</th><th>家庭住址</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>男</td><td>1995.3</td><td>东街细想 1 号 203 室</td></tr><tr><td>2</td><td>李四</td><td>女</td><td>1994.8</td><td>北路 4 弄 5 号 6 室</td></tr><tr><td>3</td><td>王五</td><td>女</td><td>1994.12</td><td>南大道 789 号</td></tr><tr><td>······</td><td>······</td><td>·······</td><td>·······</td><td>·······</td></tr></tbody></table><h3 id="线性表的抽象数据类型"><a href="#线性表的抽象数据类型" class="headerlink" title="线性表的抽象数据类型"></a>线性表的抽象数据类型</h3><h3 id="线性表的顺序存储结构"><a href="#线性表的顺序存储结构" class="headerlink" title="线性表的顺序存储结构"></a>线性表的顺序存储结构</h3><ul><li><p>顺序存储定义</p><p>线性表的顺序存储结构，指的是用一段地址连续的存储单元依次存储线性表的数据元素</p><p>示意图如下：</p><table><thead><tr><th align="center">a1</th><th>a2</th><th>······</th><th>ai-1</th><th>ai</th><th>······</th><th>an</th></tr></thead><tbody><tr><td align="center"></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>顺序存储方式</p><p>线性表的顺序存储的结构代码</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#define MAXSIZE 20 //存储空间的初始分配量</span><br><span class="line">typedef int ElemType;</span><br><span class="line">typedef struct</span><br><span class="line">{</span><br><span class="line">   ElemType daata [MAXSIZE];</span><br><span class="line">   int length;</span><br><span class="line">}SqList;</span><br></pre></td></tr></tbody></table></figure><p>描述顺序的结构需要三个属性：</p><ul><li>存储空间的起始位置</li><li>线性表的最大存储容量</li><li>线性表的当前长度</li></ul></li><li><p>数据长度与线性表长度的区别</p></li><li><p>地址计算方法</p><p><strong>存储器中每个存储单元都有自己的编号，这个标号称为地址</strong></p></li></ul><h3 id="顺序存储结构的插入与删除"><a href="#顺序存储结构的插入与删除" class="headerlink" title="顺序存储结构的插入与删除"></a>顺序存储结构的插入与删除</h3><ul><li>获得元素操作</li><li>插入操作</li><li>删除操作</li><li>线性表顺序存储结构的优缺点</li></ul><h3 id="线性表的链式存储结构"><a href="#线性表的链式存储结构" class="headerlink" title="线性表的链式存储结构"></a>线性表的链式存储结构</h3><h3 id="单链表的读取"><a href="#单链表的读取" class="headerlink" title="单链表的读取"></a>单链表的读取</h3><h3 id="单链表的插入与删除"><a href="#单链表的插入与删除" class="headerlink" title="单链表的插入与删除"></a>单链表的插入与删除</h3><h3 id="单链表的整表创建与删除"><a href="#单链表的整表创建与删除" class="headerlink" title="单链表的整表创建与删除"></a>单链表的整表创建与删除</h3><h3 id="单链表结构与顺序存储结构优缺点"><a href="#单链表结构与顺序存储结构优缺点" class="headerlink" title="单链表结构与顺序存储结构优缺点"></a>单链表结构与顺序存储结构优缺点</h3><h3 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h3><h3 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h3><h3 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h3><h3 id="总结回顾"><a href="#总结回顾" class="headerlink" title="总结回顾"></a>总结回顾</h3><h2 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h2><h2 id="串"><a href="#串" class="headerlink" title="串"></a>串</h2><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot; title=&quot;数据结构&quot;&gt;&lt;/a&gt;数据结构&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="www.aabigale.top/2020/04/05/%E7%AE%97%E6%B3%95/"/>
    <id>www.aabigale.top/2020/04/05/%E7%AE%97%E6%B3%95/</id>
    <published>2020-04-05T08:58:21.848Z</published>
    <updated>2020-04-05T10:05:18.377Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><a id="more"></a><h2 id="大整数运算"><a href="#大整数运算" class="headerlink" title="大整数运算"></a>大整数运算</h2><p>该部分重难点</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 大整数的运算的算法思想与处理技巧</span><br><span class="line">* 大整数进行加、减、乘、除运算的算法框架</span><br></pre></td></tr></tbody></table></figure><ul><li><p>计算n！</p><ul><li>当n规模较小 （n&lt;13）<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">main()</span><br><span class="line">{</span><br><span class="line">    int n,t,k;</span><br><span class="line">    scanf("%d",&amp;n);</span><br><span class="line">    t=1; //t为累乘器                             for(k=1;k&lt;=n;k++)       </span><br><span class="line">        t*=k;          </span><br><span class="line">    printf(" %d!=%ld\n",n,t);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li>当n规模较大<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;math.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">{</span><br><span class="line">  int j,k,m,n,a[100000];</span><br><span class="line">  long g,t;</span><br><span class="line">  double s;</span><br><span class="line">  printf("Please input an integer: ");</span><br><span class="line">  scanf("%d",&amp;n);</span><br><span class="line">  s=0;</span><br><span class="line">  for (k=2;k&lt;=n;k++)</span><br><span class="line">    s+=log10(k);</span><br><span class="line">  m=(int)s+1;//计算n!后的位数</span><br><span class="line">  for (k=1;k&lt;=m;k++)</span><br><span class="line">     a[k]=0;</span><br><span class="line">  a[1]=1; g=0;//进位符</span><br><span class="line"> </span><br><span class="line">  for (k=2;k&lt;=n;k++)</span><br><span class="line">    for (j=1;j&lt;=m;j++)</span><br><span class="line">    {</span><br><span class="line">      t=a[j]*k+g;</span><br><span class="line">      a[j]=t%10;</span><br><span class="line">      g=t/10;</span><br><span class="line">  }</span><br><span class="line"> printf("%d!=",n);</span><br><span class="line">  for (k=m;k&gt;=1;k--)</span><br><span class="line">    printf("%1d",a[k]);</span><br><span class="line">  printf("\n");</span><br><span class="line">  printf("m=%d\n",m);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><ul><li><p>大整数加法</p><p>用数组储存，假定每个数组元素存储4位</p><p><strong>核心代码：</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">void add(int *a, int *b, int *c)</span><br><span class="line">{</span><br><span class="line"> int i;</span><br><span class="line"> for(i = N - 1; i &gt;= 0; i--)</span><br><span class="line">    {</span><br><span class="line">      c[i] = a[i] + b[i] + carry;</span><br><span class="line">      carry=c[i]/10000;</span><br><span class="line">      c[i]=c[i]%10000;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><ul><li><p>大整数减法</p><p><strong>核心代码：</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void sub(int *a, int *b, int *c) </span><br><span class="line">{</span><br><span class="line">  int i;</span><br><span class="line">  for(i =N- 1; i &gt;= 0; i--) </span><br><span class="line"> {</span><br><span class="line">   c[i] = a[i] - b[i] - borrow;</span><br><span class="line">   if(c[i] &gt;= 0)</span><br><span class="line">       borrow = 0;</span><br><span class="line">   else // 借位</span><br><span class="line">   {</span><br><span class="line">       c[i] = c[i] + 10000;</span><br><span class="line">       borrow = 1;}</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>大整数乘法</p><ul><li><p>大整数与整数相乘</p><p><strong>核心代码：</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">void mul(int *a, int b, int *c)     </span><br><span class="line">{ </span><br><span class="line">  int i, tmp, carry = 0;</span><br><span class="line">  for(i = N - 1; i &gt;= 0; i--)       </span><br><span class="line">  {</span><br><span class="line">       tmp = a[i] * b + carry;     </span><br><span class="line">       c[i] = tmp % 10000;                          carry = tmp / 10000;         </span><br><span class="line">  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><ul><li><p>大整数与大整数相乘</p><p><strong>核心代码：</strong></p></li></ul><p>​                                                    </p><p>​                                                                         </p><h2 id="算法的概念"><a href="#算法的概念" class="headerlink" title="算法的概念"></a>算法的概念</h2><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><h2 id="递推"><a href="#递推" class="headerlink" title="递推"></a>递推</h2><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h2 id="回溯法"><a href="#回溯法" class="headerlink" title="回溯法"></a>回溯法</h2><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><h2 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;算法&quot;&gt;&lt;a href=&quot;#算法&quot; class=&quot;headerlink&quot; title=&quot;算法&quot;&gt;&lt;/a&gt;算法&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库系统概述 一</title>
    <link href="www.aabigale.top/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%20%E4%B8%80/"/>
    <id>www.aabigale.top/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%20%E4%B8%80/</id>
    <published>2020-04-03T09:02:21.868Z</published>
    <updated>2020-04-14T08:38:00.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本知识与关系模型"><a href="#基本知识与关系模型" class="headerlink" title="基本知识与关系模型"></a>基本知识与关系模型</h1><a id="more"></a><h2 id="初步认识数据库系统"><a href="#初步认识数据库系统" class="headerlink" title="初步认识数据库系统"></a>初步认识数据库系统</h2><p>该部分的重难点</p><pre><code>* 一组概念的区分：数据库、数据库系统和数据库管理系统* 熟悉“表”的相关要素及术语* 熟悉数据库系统的构成（工作环境）* 了解数据库管理系统的功能：用户和系统角度</code></pre><h3 id="为什么要学习数据库系统"><a href="#为什么要学习数据库系统" class="headerlink" title="为什么要学习数据库系统"></a>为什么要学习数据库系统</h3><h3 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h3><ul><li><strong>数据库是电子化信息扥集合</strong></li><li>数据库起源于规范化“表”的处理</li><li>基于“表”的数据库的影响</li><li>对“表”的抽象：<strong>理解-区分-命名-表达</strong></li><li>数据库相互之间有关联关系的table的集合</li></ul><h3 id="什么是数据库系统"><a href="#什么是数据库系统" class="headerlink" title="什么是数据库系统"></a>什么是数据库系统</h3><ul><li>数据库系统的构成-概念层次<ul><li>数据库</li><li>数据库管理系统</li><li>数据库应用</li><li>数据库管理员</li><li>计算机基本系统</li></ul></li><li>数据库系统的构成-实例层次</li></ul><h3 id="什么是数据库管理系统-lt-如何利用-gt"><a href="#什么是数据库管理系统-lt-如何利用-gt" class="headerlink" title="什么是数据库管理系统<如何利用>"></a>什么是数据库管理系统&lt;如何利用&gt;</h3><ul><li><p>用户角度</p><pre><code>* 数据库定义：用户通过**数据定义语言&lt;DDL&gt;**定义数据库中table的名称，标题* 数据库操纵：用户通过**数据操纵语言&lt;DML&gt;**对数据库中的表进行增删改查* 数据库控制：用户通过**数据控制语言&lt;DCL&gt;**控制数据库中数据的使用——哪些用户可以用，哪些不能用* 数据库维护：数据库管理系统&lt;DBMS&gt;提供一系列程序给用户，从而对数据库进行维护</code></pre></li><li><p>数据库语言</p><ul><li><p>SQL语言</p><pre><code>* 数据定义语言* 数据操纵语言* 数据控制语言</code></pre><ul><li>数据库语言与高级语言</li></ul></li></ul></li><li><p>系统角度</p></li></ul><h2 id="数据库系统的结构抽象与演变"><a href="#数据库系统的结构抽象与演变" class="headerlink" title="数据库系统的结构抽象与演变"></a>数据库系统的结构抽象与演变</h2><p>该部分的重难点</p><pre><code>* 一组概念的区分：三级模式两层映像，物理独立性和逻辑独立性* 一组概念的区分：数据→模式→数据模型* 几种数据模型的差异：网状/层次模型→关系模型→oo数据模型</code></pre><h3 id="数据库系统的标准结构"><a href="#数据库系统的标准结构" class="headerlink" title="数据库系统的标准结构"></a>数据库系统的标准结构</h3><h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><h3 id="数据库系统的演变与发展"><a href="#数据库系统的演变与发展" class="headerlink" title="数据库系统的演变与发展"></a>数据库系统的演变与发展</h3><h2 id="关系模型之基本概念"><a href="#关系模型之基本概念" class="headerlink" title="关系模型之基本概念"></a>关系模型之基本概念</h2><p>该部分重难点</p><pre><code>* 一组概念的区分：围绕关系的相关概念，如域。笛卡尔积，关系，关系模式，关键字/键/码，外码/外键，主码/主键,主属性与非属性。* 三个完整性，参照完整性和用户自定义的完整性</code></pre><h4 id="关系模型概述"><a href="#关系模型概述" class="headerlink" title="关系模型概述"></a>关系模型概述</h4><ul><li><p>关系模型的提出</p><ul><li>最早由E.F.Codd在1970年提出</li><li>由表及表的处理方式中抽象出来的，进行数学化严格定义基础上，引入集合理论与逻辑学理论提出的</li><li>数据库三大经典数据模型之一</li><li>SQL语言是建立在关系模型基础上的</li></ul></li><li><p>关系模型研究什么</p><ul><li>形象的说，一个关系就是一个 table</li><li>关系模型就是处理 table 的，由三部分组成<ul><li>描述DB各种数据的基本结构形式</li><li>描述table与table之间可能发生的各种操作</li><li>描述这些操作所应遵循的约束条件(完整性约束)</li></ul></li><li>就是要学习：table如何描述，有哪些操作，结果是什么，有哪些约束</li></ul></li><li><p>关系模型的三个要素</p><ul><li>基本结构</li><li>基本操作</li><li>完整性约束：实体完整性，参照完整性和用户自定义的完整性</li></ul></li><li><p>关系模型与关系数据库语言的关系</p><ul><li><p>关系运算：关系代数和关系演算；关系演算：元组演算和域演算</p></li><li><p>关系代数示例：基于集合的运算</p></li><li><p>基于关系代数设计的数据库语言(ISBL)：用计算机可识别的符号表征关系代数的运算符号</p></li><li><p>元组演算：基于逻辑的运算</p></li><li><p>基于元组演算设计的数据库语言：······</p></li><li><p>域演算示例：基于示例的运算</p></li><li><p>基于域演算设计的数据库语言：······</p></li></ul></li><li><p>为什么要学习关系模型与关系数据库语言</p></li><li><p>即将学习的内容概述</p><ul><li>理解关系，理解如何用关系对table进行抽象或说严格定义</li><li>理解关系/表所具有的各种特征，理解关系模型</li><li>熟练掌握关系代数，元组演算和域演算</li></ul></li></ul><h4 id="什么是关系"><a href="#什么是关系" class="headerlink" title="什么是关系"></a>什么是关系</h4><ul><li><p>什么是”表”</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为什么把表称为关系？</span><br><span class="line">怎样严格定义一个"表"？</span><br><span class="line">"表"和"关系"有什么异同？</span><br></pre></td></tr></tbody></table></figure></li><li><p>“表”的基本构成要素</p><ul><li><p>如何严格地定义table</p><p><img src="E:%5Cnodejs%5Cnode_global%5Chexo%5Csource_posts%5C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%E4%B8%80%5C4.png" alt="4"></p></li></ul></li><li><p>“ 表 “的严格定义–关系？</p><ul><li><p>首先定义”列”的取值范围”域”</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">域：</span><br><span class="line">* 一组值的集合，这组值具有相同的数据类型</span><br><span class="line">  如整数的集合，，全体学生的集合</span><br><span class="line">* 集合中元素的个数称为域的基数</span><br></pre></td></tr></tbody></table></figure></li><li><p>再定义” 元组 “及所有可能组合的元组：笛卡尔积</p><p>  <strong>笛卡尔积：笛卡尔积是有 n 个域形成的所有可能组合的集合</strong></p><p>  <strong>笛卡尔积的基数：若 Di 的基数为 mi ，则笛卡尔积的基数即元组个数为 m1 * m2 * ··· * mn</strong></p><ul><li><p>一组域D1，D2，··· ，Dn的笛卡尔积</p><p>D1 * D2 * ····*Dn = { (d1，d2，··· ，dn) | di∈Di，i = 1，···· ，n}</p></li><li><p>笛卡尔积的每个元素( d1 , d2, … , dn ) 称作一个 *<em>n-元组 *</em></p></li><li><p>笛卡尔积的的具有意义的组合称为关系</p></li></ul></li></ul></li><li></li></ul><p>  一组域D1，D2，··· ，Dn的笛卡尔积</p><p>​                         </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本知识与关系模型&quot;&gt;&lt;a href=&quot;#基本知识与关系模型&quot; class=&quot;headerlink&quot; title=&quot;基本知识与关系模型&quot;&gt;&lt;/a&gt;基本知识与关系模型&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>前端入门</title>
    <link href="www.aabigale.top/2020/04/03/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8/"/>
    <id>www.aabigale.top/2020/04/03/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8/</id>
    <published>2020-04-03T09:02:21.861Z</published>
    <updated>2020-04-08T11:53:19.808Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><h1 id="web前端开发最佳实践"><a href="#web前端开发最佳实践" class="headerlink" title="web前端开发最佳实践"></a>web前端开发最佳实践</h1><h1 id="前端入门-HTML-amp-CSS-学习"><a href="#前端入门-HTML-amp-CSS-学习" class="headerlink" title="前端入门 HTML&amp;CSS 学习"></a>前端入门 HTML&amp;CSS 学习</h1><a id="more"></a><h2 id="第一部分-高效web前端开发综述"><a href="#第一部分-高效web前端开发综述" class="headerlink" title="第一部分 高效web前端开发综述"></a>第一部分 高效web前端开发综述</h2><h2 id="HTML相关开发的"><a href="#HTML相关开发的" class="headerlink" title="HTML相关开发的"></a>HTML相关开发的</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;hr&gt;
&lt;h1 id=&quot;web前端开发最佳实践&quot;&gt;&lt;a href=&quot;#web前端开发最佳实践&quot; class=&quot;headerlink&quot; title=&quot;web前端开发最佳实践&quot;&gt;&lt;/a&gt;web前端开发最佳实践&lt;/h1&gt;&lt;h1 id=&quot;前端入门-HTML-amp-CSS-学习&quot;&gt;&lt;a href=&quot;#前端入门-HTML-amp-CSS-学习&quot; class=&quot;headerlink&quot; title=&quot;前端入门 HTML&amp;amp;CSS 学习&quot;&gt;&lt;/a&gt;前端入门 HTML&amp;amp;CSS 学习&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java学习之基础篇</title>
    <link href="www.aabigale.top/2020/04/03/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    <id>www.aabigale.top/2020/04/03/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%AF%87/</id>
    <published>2020-04-03T09:02:21.839Z</published>
    <updated>2020-04-17T09:56:45.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><a id="more"></a><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h3><h4 id="面向对象与面向过程"><a href="#面向对象与面向过程" class="headerlink" title="面向对象与面向过程"></a>面向对象与面向过程</h4><h4 id="面向对象的三大基本特征"><a href="#面向对象的三大基本特征" class="headerlink" title="面向对象的三大基本特征"></a>面向对象的三大基本特征</h4><h4 id="面向对象的五大基本原则"><a href="#面向对象的五大基本原则" class="headerlink" title="面向对象的五大基本原则"></a>面向对象的五大基本原则</h4><h5 id="封装、继承、多态"><a href="#封装、继承、多态" class="headerlink" title="封装、继承、多态"></a>封装、继承、多态</h5><ul><li>什么是多态</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/overloading-vs-overriding" target="_blank" rel="noopener">方法重写与重载</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/extends-implement" target="_blank" rel="noopener">Java的继承与实现</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/inheritance-composition" target="_blank" rel="noopener">Java的继承与组合</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/constructor" target="_blank" rel="noopener">构造函数与默认构造函数</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/variable" target="_blank" rel="noopener">类变量、成员变量和局部变量</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/scope" target="_blank" rel="noopener">成员变量和方法作用域</a></li></ul><h5 id="平台无关性"><a href="#平台无关性" class="headerlink" title="平台无关性"></a>平台无关性</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/platform-independent" target="_blank" rel="noopener">Java如何实现的平台无关性的</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/jvm-language" target="_blank" rel="noopener">JVM还支持哪些语言</a></li></ul><h5 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/java-pass-by" target="_blank" rel="noopener">值传递、引用传递</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/object-oriented/why-pass-by-reference" target="_blank" rel="noopener">为什么说Java中只有值传递</a></li></ul><h4 id="Java基础知识"><a href="#Java基础知识" class="headerlink" title="Java基础知识"></a>Java基础知识</h4><h5 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/basic-data-types" target="_blank" rel="noopener">8种基本数据类型</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/integer-scope" target="_blank" rel="noopener">整型中byte、short、int、long的取值范围</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/float" target="_blank" rel="noopener">什么是浮点型？</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/single-double-float" target="_blank" rel="noopener">什么是单精度和双精度？</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/float-amount" target="_blank" rel="noopener">为什么不能用浮点型表示金额？</a></li></ul><h5 id="自动拆装箱"><a href="#自动拆装箱" class="headerlink" title="自动拆装箱"></a>自动拆装箱</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/boxing-unboxing" target="_blank" rel="noopener">自动拆装箱</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/integer-cache" target="_blank" rel="noopener">Integer的缓存机制</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/success-isSuccess-and-bollean-Bollean" target="_blank" rel="noopener">如何正确定义接口的返回值(boolean/Boolean)类型及命名(success/Success)</a></li></ul><h5 id="String"><a href="#String" class="headerlink" title="String"></a>String</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/final-string" target="_blank" rel="noopener">字符串的不可变性</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/substring" target="_blank" rel="noopener">JDK 6和JDK 7中substring的原理及区别</a></li><li>replaceFirst、replaceAll、replace区别</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/string-append" target="_blank" rel="noopener">String对“+”的重载</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/string-concat" target="_blank" rel="noopener">字符串拼接的几种方式和区别</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/value-of-vs-to-string" target="_blank" rel="noopener">String.valueOf和Integer.toString的区别</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/switch-string" target="_blank" rel="noopener">switch对String的支持</a></li><li>字符串池</li><li>常量池（运行时常量池、Class常量池）</li><li>intern</li></ul><h5 id="Java中各种关键字"><a href="#Java中各种关键字" class="headerlink" title="Java中各种关键字"></a>Java中各种关键字</h5><ul><li>transient</li><li>instanceof</li><li>volatile</li><li>synchronized</li><li>final</li><li>static</li><li>const</li></ul><h5 id="集合类"><a href="#集合类" class="headerlink" title="集合类"></a>集合类</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/Collection-vs-Collections" target="_blank" rel="noopener">Collection和Collections区别</a></li><li>常用集合类的使用</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/set-vs-list" target="_blank" rel="noopener">Set和List区别？</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/arraylist-vs-linkedlist-vs-vector" target="_blank" rel="noopener">ArrayList和LinkedList和Vector的区别</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/synchronizedlist-vector" target="_blank" rel="noopener">SynchronizedList和Vector的区别</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/set-repetition" target="_blank" rel="noopener">Set如何保证元素不重复?</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/HashMap-HashTable-ConcurrentHashMap" target="_blank" rel="noopener">HashMap、HashTable、ConcurrentHashMap区别</a></li><li>Java 8中Map相关的红黑树的引用背景、原理等</li><li>HashMap的容量、扩容、hash等原理</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/stream" target="_blank" rel="noopener">Java 8中stream相关用法</a></li><li>Apache集合处理工具类的使用</li><li>不同版本的JDK中HashMap的实现的区别以及原因</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/Arrays-asList" target="_blank" rel="noopener">Arrays.asList获得的List使用时需要注意什么</a></li><li>Collection如何迭代</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/Enumeration-vs-Iterator" target="_blank" rel="noopener">Enumeration和Iterator区别</a></li><li>如何在遍历的同时删除ArrayList中的元素</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/fail-fast-vs-fail-safe" target="_blank" rel="noopener">fail-fast 和 fail-safe</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/CopyOnWriteArrayList" target="_blank" rel="noopener">CopyOnWriteArrayList</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/ConcurrentSkipListMap" target="_blank" rel="noopener">ConcurrentSkipListMap</a></li></ul><h5 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/enum-usage" target="_blank" rel="noopener">枚举的用法</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/enum-impl" target="_blank" rel="noopener">枚举的实现</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/enum-singleton" target="_blank" rel="noopener">枚举与单例</a></li><li>Enum类</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/enum-compare" target="_blank" rel="noopener">Java枚举如何比较</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/enum-switch" target="_blank" rel="noopener">switch对枚举的支持</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/enum-serializable" target="_blank" rel="noopener">枚举的序列化如何实现</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/enum-thread-safe" target="_blank" rel="noopener">枚举的线程安全性问题</a></li></ul><h5 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/byte-stream-vs-character-stream" target="_blank" rel="noopener">字符流、字节流</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/input-stream-vs-output-stream" target="_blank" rel="noopener">输入流、输出流</a></li><li>字节流和字符流之间的相互转换</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/synchronized-vs-asynchronization" target="_blank" rel="noopener">同步、异步</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/block-vs-non-blocking" target="_blank" rel="noopener">阻塞、非阻塞</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/linux-io" target="_blank" rel="noopener">Linux 5种IO模型</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/bio-vs-nio-vs-aio" target="_blank" rel="noopener">BIO、NIO和AIO的区别、三种IO的用法与原理</a></li><li>netty</li></ul><h5 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/reflection" target="_blank" rel="noopener">反射</a>与工厂模式、</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/usage-of-reflection" target="_blank" rel="noopener">反射有什么作用</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/Class" target="_blank" rel="noopener">Class类</a></li><li><code>java.lang.reflect.*</code></li></ul><h5 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/static-proxy" target="_blank" rel="noopener">静态代理</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/dynamic-proxy" target="_blank" rel="noopener">动态代理</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/dynamic-proxy-vs-reflection" target="_blank" rel="noopener">动态代理和反射的关系</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/dynamic-proxy-implementation" target="_blank" rel="noopener">动态代理的几种实现方式</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/aop-vs-proxy" target="_blank" rel="noopener">AOP</a></li></ul><h5 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/serialize" target="_blank" rel="noopener">什么是序列化与反序列化</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/serialize-in-java" target="_blank" rel="noopener">Java如何实现序列化与反序列化</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/diff-serializable-vs-externalizable" target="_blank" rel="noopener">Serializable 和 Externalizable 有何不同</a></li><li>为什么序列化</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/serialVersionUID" target="_blank" rel="noopener">serialVersionUID</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/serialVersionUID-modify" target="_blank" rel="noopener">为什么serialVersionUID不能随便改</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/transient" target="_blank" rel="noopener">transient</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/serialize-principle" target="_blank" rel="noopener">序列化底层原理</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/serialize-singleton" target="_blank" rel="noopener">序列化如何破坏单例模式</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/protobuf" target="_blank" rel="noopener">protobuf</a></li><li>为什么说序列化并不安全</li></ul><h5 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/meta-annotation" target="_blank" rel="noopener">元注解</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/custom-annotation" target="_blank" rel="noopener">自定义注解</a></li><li>Java中常用注解使用</li><li>注解与反射的结合</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/create-annotation" target="_blank" rel="noopener">如何自定义一个注解？</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/annotation-in-spring" target="_blank" rel="noopener">Spring常用注解</a></li></ul><h5 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/generics" target="_blank" rel="noopener">什么是泛型</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/type-erasue" target="_blank" rel="noopener">类型擦除</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/generics-problem" target="_blank" rel="noopener">泛型带来的问题</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/k-t-v-e" target="_blank" rel="noopener">泛型中K T V E ？ object等的含义</a></li><li>泛型各种用法</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/Wildcard-Character" target="_blank" rel="noopener">限定通配符和非限定通配符</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/extends-vs-super" target="_blank" rel="noopener">上下界限定符extends 和 super</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/genericity-list" target="_blank" rel="noopener"><code>List</code>和原始类型<code>List</code>之间的区别?</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/genericity-list-wildcard" target="_blank" rel="noopener"><code>List</code>和<code>List</code>之间的区别是什么?</a></li></ul><h5 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h5><ul><li>junit</li><li>junit 和Spring 的结合</li><li>mock</li><li>mockito</li><li>内存数据库（h2）</li></ul><h5 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h5><ul><li><code>java.lang.util.regex.*</code></li></ul><h5 id="常用的Java工具库"><a href="#常用的Java工具库" class="headerlink" title="常用的Java工具库"></a>常用的Java工具库</h5><ul><li><code>commons.lang</code></li><li><code>commons.*...</code></li><li><code>guava-libraries</code></li><li><code>netty</code></li></ul><h5 id="API-amp-SPI"><a href="#API-amp-SPI" class="headerlink" title="API&amp;SPI"></a>API&amp;SPI</h5><ul><li>API</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/api-vs-spi" target="_blank" rel="noopener">API和SPI的关系和区别</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/create-spi" target="_blank" rel="noopener">如何定义SPI</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/spi-principle" target="_blank" rel="noopener">SPI的实现原理</a></li></ul><h5 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/error-vs-exception" target="_blank" rel="noopener">Error和Exception</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/exception-type" target="_blank" rel="noopener">异常类型</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/keyword-about-exception" target="_blank" rel="noopener">异常相关关键字</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/handle-exception" target="_blank" rel="noopener">正确处理异常</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/define-exception" target="_blank" rel="noopener">自定义异常</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/exception-chain" target="_blank" rel="noopener">异常链</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/try-with-resources" target="_blank" rel="noopener">try-with-resources</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/order-about-finllly-return" target="_blank" rel="noopener">finally和return的执行顺序</a></li></ul><h5 id="时间处理"><a href="#时间处理" class="headerlink" title="时间处理"></a>时间处理</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/time-zone" target="_blank" rel="noopener">时区</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/StandardTime-vs-daylightSavingTime" target="_blank" rel="noopener">冬令时和夏令时</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/timestamp" target="_blank" rel="noopener">时间戳</a></li><li>Java中时间API</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/GMT" target="_blank" rel="noopener">格林威治时间</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/CET-UTC-GMT-CST" target="_blank" rel="noopener">CET,UTC,GMT,CST几种常见时间的含义和关系</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/simpledateformat-thread-safe" target="_blank" rel="noopener">SimpleDateFormat的线程安全性问题</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/time-in-java8" target="_blank" rel="noopener">Java 8中的时间处理</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/get-los_angeles-time" target="_blank" rel="noopener">如何在东八区的计算机上获取美国时间</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/YYYY-vs-yyyy" target="_blank" rel="noopener">yyyy和YYYY有什么区别？</a></li></ul><h5 id="编码方式"><a href="#编码方式" class="headerlink" title="编码方式"></a>编码方式</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/ASCII" target="_blank" rel="noopener">什么是ASCII？</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/UNICODE" target="_blank" rel="noopener">Unicode</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/why-utf8" target="_blank" rel="noopener">有了Unicode为啥还需要UTF-8</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/UTF8-UTF16-UTF32" target="_blank" rel="noopener">UTF8、UTF16、UTF32区别</a></li><li>有了UTF8为什么还需要GBK？</li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/gbk-gb2312-gb18030" target="_blank" rel="noopener">GBK、GB2312、GB18030之间的区别</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/url-encode" target="_blank" rel="noopener">URL编解码</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/big-endian-vs-little-endian" target="_blank" rel="noopener">Big Endian和Little Endian</a></li><li>如何解决乱码问题</li></ul><h5 id="语法糖"><a href="#语法糖" class="headerlink" title="语法糖"></a>语法糖</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/syntactic-sugar" target="_blank" rel="noopener">Java中语法糖原理、解语法糖</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/java-basic/syntactic-sugar" target="_blank" rel="noopener">语法糖介绍</a></li></ul><h5 id="JMS"><a href="#JMS" class="headerlink" title="JMS"></a>JMS</h5><ul><li>什么是Java消息服务</li><li>JMS消息传送模型</li></ul><h5 id="JMX"><a href="#JMX" class="headerlink" title="JMX"></a>JMX</h5><ul><li>java.lang.management.*</li><li>javax.management.*</li></ul><h5 id="Java-8"><a href="#Java-8" class="headerlink" title="Java 8"></a>Java 8</h5><ul><li>lambda表达式</li><li>Stream API</li><li>时间API</li></ul><h5 id="阅读源代码"><a href="#阅读源代码" class="headerlink" title="阅读源代码"></a>阅读源代码</h5><ul><li>String</li><li>Integer</li><li>Long</li><li>Enum</li><li>BigDecimal</li><li>ThreadLocal</li><li>ClassLoader &amp; URLClassLoader</li><li>ArrayList &amp; LinkedList</li><li>HashMap &amp; LinkedHashMap &amp; TreeMap &amp; CouncurrentHashMap</li><li>HashSet &amp; LinkedHashSet &amp; TreeSet</li></ul><h4 id="Java并发编程"><a href="#Java并发编程" class="headerlink" title="Java并发编程"></a>Java并发编程</h4><h5 id="并发与并行"><a href="#并发与并行" class="headerlink" title="并发与并行"></a>并发与并行</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/concurrent-coding/concurrent" target="_blank" rel="noopener">什么是并发</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/concurrent-coding/parallel" target="_blank" rel="noopener">什么是并行</a></li><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/concurrent-coding/concurrent-vs-parallel" target="_blank" rel="noopener">并发与并行的区别</a></li></ul><h5 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h5><ul><li>线程与进程的区别</li><li>线程的实现</li><li>线程的状态</li><li>线程优先级</li><li>线程调度</li><li>多线程如何Debug</li><li>守护线程</li></ul><h5 id="创建线程的多种方式"><a href="#创建线程的多种方式" class="headerlink" title="创建线程的多种方式"></a>创建线程的多种方式</h5><ul><li>继承Thread类创建线程</li><li>实现Runnable接口创建线程</li><li>通过Callable和FutureTask创建线程</li><li>通过线程池创建线程</li></ul><h5 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h5><ul><li>自己设计线程池</li><li>submit() 和 execute()</li><li>线程池原理</li><li>为什么不允许使用Executors创建线程池</li></ul><h5 id="线程安全"><a href="#线程安全" class="headerlink" title="线程安全"></a>线程安全</h5><ul><li>什么是线程安全</li><li>多级缓存和一致性问题</li><li>CPU时间片和原子性问题</li><li>指令重排和有序性问题</li><li>线程安全和内存模型的关系</li><li>happens-before</li><li>as-if-serial</li></ul><h5 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h5><ul><li>可重入锁</li><li>阻塞锁</li><li>乐观锁与悲观锁</li><li>数据库相关锁机制</li><li>分布式锁</li></ul><h5 id="无锁"><a href="#无锁" class="headerlink" title="无锁"></a>无锁</h5><ul><li>CAS</li><li>CAS的ABA问题</li></ul><h5 id="锁优化"><a href="#锁优化" class="headerlink" title="锁优化"></a>锁优化</h5><ul><li>偏向锁</li><li>轻量级锁</li><li>重量级锁</li><li>锁消除</li><li>锁粗化</li><li>自旋锁</li></ul><h5 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/concurrent-coding/deadlock-java-level" target="_blank" rel="noopener">什么是死锁</a></li><li>死锁的原因</li><li>如何避免死锁</li><li>写一个死锁的程序</li><li>死锁问题如何排查</li></ul><h5 id="synchronized"><a href="#synchronized" class="headerlink" title="synchronized"></a>synchronized</h5><ul><li><a href="http://hollischuang.gitee.io/tobetopjavaer/?nsukey=RvjaFvLCGPPbjwfwF7XlmqNl09mFjmAUCsru3rF4RjZrjP3y1sovYNNzWc4uLvvXNZVGH5VYcNgRKXca6lQ9M31gH80kzcskWTHY%2BdeAaA%2BE7chi2W7Lpx%2BBa4sSy2GGy4MAIR%2FZYygnD40nwFRgb0h%2BUuTFHNndDfycK3BzLOtbGh4KX0ZQzIJty1n6zz%2B0yN0dk6rdrSREChjhHbQBvA%3D%3D#/basics/concurrent-coding/synchronized" target="_blank" rel="noopener">synchronized是如何实现的？</a></li><li>synchronized和lock之间关系</li><li>不使用synchronized如何实现一个线程安全的单例</li><li>synchronized和原子性</li><li>synchronized和可见性</li><li>synchronized和有序性</li></ul><h5 id="volatile"><a href="#volatile" class="headerlink" title="volatile"></a>volatile</h5><ul><li>编译器指令重排和CPU指令重排</li><li>volatile的实现原理</li><li>内存屏障</li><li>volatile和原子性</li><li>volatile和可见性</li><li>volatile和有序性</li><li>有了symchronized为什么还需要volatile</li></ul><h5 id="线程相关方法"><a href="#线程相关方法" class="headerlink" title="线程相关方法"></a>线程相关方法</h5><ul><li>start &amp; run</li><li>sleep 和 wait</li><li>notify &amp; notifyAll</li></ul><h5 id="ThreadLocal"><a href="#ThreadLocal" class="headerlink" title="ThreadLocal"></a>ThreadLocal</h5><ul><li>ThreadLocal 原理</li><li>ThreadLocal 底层的数据结构</li></ul><h5 id="写代码来解决生产者消费者问题"><a href="#写代码来解决生产者消费者问题" class="headerlink" title="写代码来解决生产者消费者问题"></a>写代码来解决生产者消费者问题</h5><h5 id="并发包"><a href="#并发包" class="headerlink" title="并发包"></a>并发包</h5><ul><li>同步容器与并发容器</li><li>Thread</li><li>Runnable</li><li>Callable</li><li>ReentrantLock</li><li>ReentrantReadWriteLock</li><li>Atomic*</li><li>Semaphore</li><li>CountDownLatch</li><li>ConcurrentHashMap</li><li>Executors</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库作业踩的坑</title>
    <link href="www.aabigale.top/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E8%B8%A9%E7%9A%84%E5%9D%91/"/>
    <id>www.aabigale.top/2020/04/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E8%B8%A9%E7%9A%84%E5%9D%91/</id>
    <published>2020-04-03T09:02:21.812Z</published>
    <updated>2020-04-03T10:59:13.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一次数据库作业踩的坑"><a href="#第一次数据库作业踩的坑" class="headerlink" title="第一次数据库作业踩的坑"></a>第一次数据库作业踩的坑</h1><p>作业要求：创建数据库，并在数据库中创建数据表，用SQL命令修改表的结构，将数据插入到表中，并完成SQL查询。</p><a id="more"></a><h2 id="一、启动服务"><a href="#一、启动服务" class="headerlink" title="一、启动服务"></a>一、启动服务</h2><ul><li>管理员授权 Windows，不然会启动失败</li><li>用 mysql -uroot -p密码</li></ul><h2 id="二、创建数据表"><a href="#二、创建数据表" class="headerlink" title="二、创建数据表"></a>二、创建数据表</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2.png" alt="](1.png)&nbsp; &nbsp; ![" title="">                </div>                <div class="image-caption">](1.png)&nbsp; &nbsp; ![</div>            </figure><p>最后一个字段不能加‘，’</p><h2 id="三、用SQL命令修改表的结构"><a href="#三、用SQL命令修改表的结构" class="headerlink" title="三、用SQL命令修改表的结构"></a>三、用SQL命令修改表的结构</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一次数据库作业踩的坑&quot;&gt;&lt;a href=&quot;#第一次数据库作业踩的坑&quot; class=&quot;headerlink&quot; title=&quot;第一次数据库作业踩的坑&quot;&gt;&lt;/a&gt;第一次数据库作业踩的坑&lt;/h1&gt;&lt;p&gt;作业要求：创建数据库，并在数据库中创建数据表，用SQL命令修改表的结构，将数据插入到表中，并完成SQL查询。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>计算机组成原理&lt;一&gt;</title>
    <link href="www.aabigale.top/2020/03/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E4%B8%80/"/>
    <id>www.aabigale.top/2020/03/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E4%B8%80/</id>
    <published>2020-03-16T13:15:19.000Z</published>
    <updated>2020-04-03T10:59:13.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-计算机系统概论"><a href="#第一章-计算机系统概论" class="headerlink" title="第一章  计算机系统概论"></a>第一章  计算机系统概论</h1><a id="more"></a><h2 id="1-1-计算机系统简介"><a href="#1-1-计算机系统简介" class="headerlink" title="1.1 计算机系统简介"></a>1.1 计算机系统简介</h2><h3 id="计算机的软硬件概念"><a href="#计算机的软硬件概念" class="headerlink" title="计算机的软硬件概念"></a>计算机的软硬件概念</h3><p>计算机系统</p><ul><li><p>硬件：计算机实体</p></li><li><p>软件：具有各类特殊功能的（程序）</p></li></ul><p>软件分为</p><ul><li><p>系统软件： 用来管理整个计算机系统</p><p>   语言处理系统 操作系统 服务性程序 数据库管理系统 网络软件 </p></li><li><p>软件系统： 按任务需要编制成的各种软件</p></li></ul><h3 id="计算机系统的层次结构"><a href="#计算机系统的层次结构" class="headerlink" title="计算机系统的层次结构"></a>计算机系统的层次结构</h3><p>高级语言 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 虚拟机器M3 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用编译程序翻译成汇编语言</p><p>汇编语言 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 虚拟机器M2 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用汇编程序翻译成机器语言程序</p><p>操作系统 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 虚拟机器M &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用机器语言解释操作系统</p><p>机器语言 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 实际机器M1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用微指令解释机器指令</p><p>微指令系统 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 微程序机器M0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 由硬件直接执行微指令  </p><h3 id="计算机体系结构和计算机组成"><a href="#计算机体系结构和计算机组成" class="headerlink" title="计算机体系结构和计算机组成"></a>计算机体系结构和计算机组成</h3><ul><li><p>计算机体系结构 &lt;有无乘法指令&gt; ：计算机系统属性概念性的结构与功能特性 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（指令系统，数据类型，寻址技术，I/O机理）</p></li><li><p>计算机组成 &lt;如何实现乘法指令&gt; ：实现计算机体系结构所体现的属性 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （具体指令的实现）</p></li></ul><h2 id="计算机的组成"><a href="#计算机的组成" class="headerlink" title="计算机的组成"></a>计算机的组成</h2><h3 id="冯若依曼机的特点"><a href="#冯若依曼机的特点" class="headerlink" title="冯若依曼机的特点"></a>冯若依曼机的特点</h3><ul><li><p>计算机由五大件组成</p></li><li><p>指令和数据以同等地位存于存储器，可按地址寻访</p></li><li><p>指令和数据用二进制表示</p></li><li><p>指令由操作码和地址码组成</p></li><li><p>存储程序</p></li><li><p>以<strong>运算器</strong>为中心</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一章-计算机系统概论&quot;&gt;&lt;a href=&quot;#第一章-计算机系统概论&quot; class=&quot;headerlink&quot; title=&quot;第一章  计算机系统概论&quot;&gt;&lt;/a&gt;第一章  计算机系统概论&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
